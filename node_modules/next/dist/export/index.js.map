{"version":3,"sources":["../../export/index.ts"],"names":["exists","existsOrig","divideSegments","number","segments","result","dividedNumber","Math","floor","push","createProgress","total","label","currentSegmentTotal","shift","currentSegmentCount","curProgress","progressSpinner","spinner","frames","interval","newText","text","console","log","stop","exportApp","dir","options","configuration","Log","nextConfig","PHASE_EXPORT","threads","max","length","distDir","telemetry","buildExport","Telemetry","record","cliCommand","isSrcDir","hasNowJson","cwd","isCustomServer","subFolders","trailingSlash","isLikeServerless","target","silent","info","Error","customRoutesDetected","filter","config","hasNextSupport","warn","join","buildId","BUILD_ID_FILE","pagesManifest","pages","require","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","PAGES_MANIFEST","prerenderManifest","undefined","PRERENDER_MANIFEST","_","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","match","API_ROUTE","dynamicRoutes","add","outDir","outdir","promises","mkdir","recursive","EXPORT_DETAIL","JSON","stringify","version","outDirectory","success","CLIENT_STATIC_FILES_PATH","exportPathMap","CONFIG_FILE","defaultMap","i18n","experimental","renderOpts","nextExport","assetPrefix","replace","dev","hotReloader","basePath","canonicalBase","amp","isModern","modern","ampValidatorPath","validator","ampSkipValidation","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","global","__NEXT_DATA__","exportPaths","map","path","filteredPaths","route","fallbackEnabledPages","key","has","fallback","size","SSG_FALLBACK_EXPORT_ERROR","chalk","yellow","bold","progress","prefixes","statusMessage","pagesDataDir","ampValidations","hadValidationError","publicDir","CLIENT_PUBLIC_FILES_PATH","worker","Worker","resolve","maxRetries","numWorkers","enableWorkerThreads","workerThreads","exposedMethods","getStdout","pipe","process","stdout","getStderr","stderr","renderError","errorPaths","Promise","all","default","pathMap","serverless","optimizeFonts","optimizeImages","validation","ampValidationResult","Array","isArray","errors","error","fromBuildExportRevalidate","initialPageRevalidationMap","end","routes","srcRoute","pageName","pagePath","distPagesDir","substr","split","orig","htmlDest","sep","ampHtmlDest","jsonDest","copyFile","sort","flush"],"mappings":"+DAAA,uEACA,0EACA,sBAOA,+DACA,sBACA,0BACA,0BACA,4CACA,gEACA,iEACA,2CACA,oDACA,wDACA,wDAYA,6EAGA,2CACA,4CACA,6CACA,4EAIA,8BAIA,sD,w4BAEA,KAAMA,CAAAA,MAAM,CAAG,oBAAUC,UAAV,CAAf,CAEA,QAASC,CAAAA,cAAT,CAAwBC,MAAxB,CAAwCC,QAAxC,CAAoE,CAClE,KAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,MAAOF,MAAM,CAAG,CAAT,EAAcC,QAAQ,CAAG,CAAhC,CAAmC,CACjC,KAAME,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAAGC,QAApB,CAAtB,CACAD,MAAM,EAAIG,aAAV,CACAF,QAAQ,GACRC,MAAM,CAACI,IAAP,CAAYH,aAAZ,EACD,CACD,MAAOD,CAAAA,MAAP,CACD,CAED,KAAMK,CAAAA,cAAc,CAAG,CAACC,KAAD,CAAgBC,KAAhB,GAAkC,CACvD,KAAMR,CAAAA,QAAQ,CAAGF,cAAc,CAACS,KAAD,CAAQ,CAAR,CAA/B,CAEA,GAAIE,CAAAA,mBAAmB,CAAGT,QAAQ,CAACU,KAAT,EAA1B,CACA,GAAIC,CAAAA,mBAAmB,CAAG,CAA1B,CACA,GAAIC,CAAAA,WAAW,CAAG,CAAlB,CACA,GAAIC,CAAAA,eAAe,CAAG,qBAAe,GAAEL,KAAM,KAAII,WAAY,IAAGL,KAAM,GAAhD,CAAoD,CACxEO,OAAO,CAAE,CACPC,MAAM,CAAE,CACN,QADM,CAEN,QAFM,CAGN,QAHM,CAIN,QAJM,CAKN,QALM,CAMN,QANM,CAON,QAPM,CAQN,QARM,CASN,QATM,CAUN,QAVM,CAWN,QAXM,CAYN,QAZM,CAaN,QAbM,CAcN,QAdM,CAeN,QAfM,CADD,CAkBPC,QAAQ,CAAE,EAlBH,CAD+D,CAApD,CAAtB,CAuBA,MAAO,IAAM,CACXJ,WAAW,GACXD,mBAAmB,GAEnB;AACA,GAAIA,mBAAmB,GAAKF,mBAA5B,CAAiD,CAC/C,OACD,CAEDA,mBAAmB,CAAGT,QAAQ,CAACU,KAAT,EAAtB,CACAC,mBAAmB,CAAG,CAAtB,CAEA,KAAMM,CAAAA,OAAO,CAAI,GAAET,KAAM,KAAII,WAAY,IAAGL,KAAM,GAAlD,CACA,GAAIM,eAAJ,CAAqB,CACnBA,eAAe,CAACK,IAAhB,CAAuBD,OAAvB,CACD,CAFD,IAEO,CACLE,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACD,CAED,GAAIL,WAAW,GAAKL,KAAhB,EAAyBM,eAA7B,CAA8C,CAC5CA,eAAe,CAACQ,IAAhB,GACAF,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACD,CACF,CAvBD,CAwBD,CArDD,CAoEe,cAAeK,CAAAA,SAAf,CACbC,GADa,CAEbC,OAFa,CAGbC,aAHa,CAIE,yFACfF,GAAG,CAAG,kBAAQA,GAAR,CAAN,CAEA;AACA,uBAAcA,GAAd,CAAmB,KAAnB,CAA0BG,GAA1B,EAEA,KAAMC,CAAAA,UAAU,CAAGF,aAAa,EAAI,oBAAWG,wBAAX,CAAyBL,GAAzB,CAApC,CACA,KAAMM,CAAAA,OAAO,CAAGL,OAAO,CAACK,OAAR,EAAmB1B,IAAI,CAAC2B,GAAL,CAAS,eAAOC,MAAP,CAAgB,CAAzB,CAA4B,CAA5B,CAAnC,CACA,KAAMC,CAAAA,OAAO,CAAG,eAAKT,GAAL,CAAUI,UAAU,CAACK,OAArB,CAAhB,CAEA,KAAMC,CAAAA,SAAS,CAAGT,OAAO,CAACU,WAAR,CAAsB,IAAtB,CAA6B,GAAIC,mBAAJ,CAAc,CAAEH,OAAF,CAAd,CAA/C,CAEA,GAAIC,SAAJ,CAAe,CACbA,SAAS,CAACG,MAAV,CACE,4BAAgBR,wBAAhB,CAA8BI,OAA9B,CAAuC,CACrCK,UAAU,CAAE,QADyB,CAErCC,QAAQ,CAAE,IAF2B,CAGrCC,UAAU,CAAE,CAAC,EAAE,KAAM,oBAAO,UAAP,CAAmB,CAAEC,GAAG,CAAEjB,GAAP,CAAnB,CAAR,CAHwB,CAIrCkB,cAAc,CAAE,IAJqB,CAAvC,CADF,EAQD,CAED,KAAMC,CAAAA,UAAU,CAAGf,UAAU,CAACgB,aAA9B,CACA,KAAMC,CAAAA,gBAAgB,CAAGjB,UAAU,CAACkB,MAAX,GAAsB,QAA/C,CAEA,GAAI,CAACrB,OAAO,CAACsB,MAAT,EAAmB,CAACtB,OAAO,CAACU,WAAhC,CAA6C,CAC3CR,GAAG,CAACqB,IAAJ,CAAU,0BAAyBf,OAAQ,EAA3C,EACD,CAED,GAAI,CAAC,mBAAWA,OAAX,CAAL,CAA0B,CACxB,KAAM,IAAIgB,CAAAA,KAAJ,CACH,mBAAkBhB,OAAQ,+FADvB,CAAN,CAGD,CAED,KAAMiB,CAAAA,oBAAoB,CAAG,CAAC,UAAD,CAAa,WAAb,CAA0B,SAA1B,EAAqCC,MAArC,CAC1BC,MAAD,EAAY,MAAOxB,CAAAA,UAAU,CAACwB,MAAD,CAAjB,GAA8B,UADf,CAA7B,CAIA,GACE,CAACC,sBAAD,EACA,CAAC5B,OAAO,CAACU,WADT,EAEAe,oBAAoB,CAAClB,MAArB,CAA8B,CAHhC,CAIE,CACAL,GAAG,CAAC2B,IAAJ,CACG,+FAA8FJ,oBAAoB,CAACK,IAArB,CAC7F,IAD6F,CAE7F,uEAHJ,EAKD,CAED,KAAMC,CAAAA,OAAO,CAAG,qBAAa,eAAKvB,OAAL,CAAcwB,yBAAd,CAAb,CAA2C,MAA3C,CAAhB,CACA,KAAMC,CAAAA,aAAa,CACjB,CAACjC,OAAO,CAACkC,KAAT,EACCC,OAAO,CAAC,eACP3B,OADO,CAEPY,gBAAgB,CAAGgB,gCAAH,CAA0BC,4BAFnC,CAGPC,0BAHO,CAAD,CAFV,CAQA,GAAIC,CAAAA,iBAAgD,CAAGC,SAAvD,CACA,GAAI,CACFD,iBAAiB,CAAGJ,OAAO,CAAC,eAAK3B,OAAL,CAAciC,8BAAd,CAAD,CAA3B,CACD,CAAC,MAAOC,CAAP,CAAU,CAAE,CAEd,KAAMC,CAAAA,uBAAuB,CAAG,GAAIC,CAAAA,GAAJ,EAAhC,CACA,KAAMV,CAAAA,KAAK,CAAGlC,OAAO,CAACkC,KAAR,EAAiBW,MAAM,CAACC,IAAP,CAAYb,aAAZ,CAA/B,CACA,KAAMc,CAAAA,cAA6B,CAAG,EAAtC,CACA,GAAIC,CAAAA,YAAY,CAAG,KAAnB,CAEA,IAAK,KAAMC,CAAAA,IAAX,GAAmBf,CAAAA,KAAnB,CAA0B,wBACxB;AACA;AACA;AAEA,GAAIe,IAAI,CAACC,KAAL,CAAWC,oBAAX,CAAJ,CAA2B,CACzBH,YAAY,CAAG,IAAf,CACA,SACD,CAED,GAAIC,IAAI,GAAK,YAAT,EAAyBA,IAAI,GAAK,OAAlC,EAA6CA,IAAI,GAAK,SAA1D,CAAqE,CACnE,SACD,CAED;AACA;AACA;AACA;AACA,uBAAIV,iBAAJ,eAAI,mBAAmBa,aAAnB,CAAiCH,IAAjC,CAAJ,CAA4C,CAC1CN,uBAAuB,CAACU,GAAxB,CAA4BJ,IAA5B,EACA,SACD,CAEDF,cAAc,CAACE,IAAD,CAAd,CAAuB,CAAEA,IAAF,CAAvB,CACD,CAED;AACA,KAAMK,CAAAA,MAAM,CAAGtD,OAAO,CAACuD,MAAvB,CAEA,GAAID,MAAM,GAAK,eAAKvD,GAAL,CAAU,QAAV,CAAf,CAAoC,CAClC,KAAM,IAAIyB,CAAAA,KAAJ,CACH,uJADG,CAAN,CAGD,CAED,KAAM,qCAAgB,eAAK8B,MAAL,CAAhB,CAAN,CACA,KAAME,cAASC,KAAT,CAAe,eAAKH,MAAL,CAAa,OAAb,CAAsBvB,OAAtB,CAAf,CAA+C,CAAE2B,SAAS,CAAE,IAAb,CAA/C,CAAN,CAEA,sBACE,eAAKlD,OAAL,CAAcmD,yBAAd,CADF,CAEEC,IAAI,CAACC,SAAL,CAAe,CACbC,OAAO,CAAE,CADI,CAEbC,YAAY,CAAET,MAFD,CAGbU,OAAO,CAAE,KAHI,CAAf,CAFF,CAOE,MAPF,EAUA;AACA,GAAI,CAAChE,OAAO,CAACU,WAAT,EAAwB,mBAAW,eAAKX,GAAL,CAAU,QAAV,CAAX,CAA5B,CAA6D,CAC3D,GAAI,CAACC,OAAO,CAACsB,MAAb,CAAqB,CACnBpB,GAAG,CAACqB,IAAJ,CAAS,4BAAT,EACD,CACD,KAAM,iCAAc,eAAKxB,GAAL,CAAU,QAAV,CAAd,CAAmC,eAAKuD,MAAL,CAAa,QAAb,CAAnC,CAAN,CACD,CAED;AACA,GACE,CAACtD,OAAO,CAACU,WAAT,EACA,mBAAW,eAAKF,OAAL,CAAcyD,oCAAd,CAAX,CAFF,CAGE,CACA,GAAI,CAACjE,OAAO,CAACsB,MAAb,CAAqB,CACnBpB,GAAG,CAACqB,IAAJ,CAAS,kCAAT,EACD,CACD,KAAM,iCACJ,eAAKf,OAAL,CAAcyD,oCAAd,CADI,CAEJ,eAAKX,MAAL,CAAa,OAAb,CAAsBW,oCAAtB,CAFI,CAAN,CAID,CAED;AACA,GAAI,MAAO9D,CAAAA,UAAU,CAAC+D,aAAlB,GAAoC,UAAxC,CAAoD,CAClD,GAAI,CAAClE,OAAO,CAACsB,MAAb,CAAqB,CACnBpB,GAAG,CAACqB,IAAJ,CACG,gCAA+B4C,uBAAY,kCAD9C,EAGD,CACDhE,UAAU,CAAC+D,aAAX,CAA2B,KAAOE,CAAAA,UAAP,EAAqC,CAC9D,MAAOA,CAAAA,UAAP,CACD,CAFD,CAGD,CAED,KAAM,CAAEC,IAAF,EAAWlE,UAAU,CAACmE,YAA5B,CAEA;AACA,KAAMC,CAAAA,UAAU,CAAG,CACjBxE,GADiB,CAEjBgC,OAFiB,CAGjByC,UAAU,CAAE,IAHK,CAIjBC,WAAW,CAAEtE,UAAU,CAACsE,WAAX,CAAuBC,OAAvB,CAA+B,KAA/B,CAAsC,EAAtC,CAJI,CAKjBlE,OALiB,CAMjBmE,GAAG,CAAE,KANY,CAOjBC,WAAW,CAAE,IAPI,CAQjBC,QAAQ,CAAE1E,UAAU,CAAC0E,QARJ,CASjBC,aAAa,CAAE,kBAAA3E,UAAU,CAAC4E,GAAX,+BAAgBD,aAAhB,GAAiC,EAT/B,CAUjBE,QAAQ,CAAE7E,UAAU,CAACmE,YAAX,CAAwBW,MAVjB,CAWjBC,gBAAgB,CAAE,wBAAA/E,UAAU,CAACmE,YAAX,CAAwBS,GAAxB,qCAA6BI,SAA7B,GAA0C3C,SAX3C,CAYjB4C,iBAAiB,CAAE,yBAAAjF,UAAU,CAACmE,YAAX,CAAwBS,GAAxB,sCAA6BM,cAA7B,GAA+C,KAZjD,CAajBC,kBAAkB,CAAE,yBAAAnF,UAAU,CAACmE,YAAX,CAAwBS,GAAxB,sCAA6BQ,SAA7B,GAA0C/C,SAb7C,CAcjBgD,OAAO,CAAEnB,IAAF,cAAEA,IAAI,CAAEmB,OAdE,CAejBC,MAAM,CAAEpB,IAAI,CAACqB,aAfI,CAgBjBA,aAAa,CAAErB,IAAI,CAACqB,aAhBH,CAAnB,CAmBA,KAAM,CAAEC,mBAAF,CAAuBC,mBAAvB,EAA+CzF,UAArD,CAEA,GAAI0C,MAAM,CAACC,IAAP,CAAY8C,mBAAZ,EAAiCrF,MAAjC,CAA0C,CAA9C,CAAiD,CAC/C,CAAEgE,UAAD,CAAoBsB,aAApB,CAAoCD,mBAApC,CACF,CAED;AACA,CAAEE,MAAD,CAAgBC,aAAhB,CAAgC,CAC/BvB,UAAU,CAAE,IADmB,CAAhC,CAID,GAAI,CAACxE,OAAO,CAACsB,MAAT,EAAmB,CAACtB,OAAO,CAACU,WAAhC,CAA6C,CAC3CR,GAAG,CAACqB,IAAJ,CAAU,aAAYlB,OAAQ,UAA9B,EACD,CACD,KAAM6D,CAAAA,aAAa,CAAG,KAAM/D,CAAAA,UAAU,CAAC+D,aAAX,CAAyBnB,cAAzB,CAAyC,CACnE4B,GAAG,CAAE,KAD8D,CAEnE5E,GAFmE,CAGnEuD,MAHmE,CAInE9C,OAJmE,CAKnEuB,OALmE,CAAzC,CAA5B,CAQA,GAAI,CAACmC,aAAa,CAAC,MAAD,CAAd,EAA0B,CAACA,aAAa,CAAC,WAAD,CAA5C,CAA2D,CACzDA,aAAa,CAAC,MAAD,CAAb,CAAwBA,aAAa,CAAC,WAAD,CAAb,CAA6B,CACnDjB,IAAI,CAAE,SAD6C,CAArD,CAGD,CAED;AACA,KAAM+C,CAAAA,WAAW,CAAG,CAClB,GAAG,GAAIpD,CAAAA,GAAJ,CACDC,MAAM,CAACC,IAAP,CAAYoB,aAAZ,EAA2B+B,GAA3B,CAAgCC,IAAD,EAC7B,2CAAoB,yCAAkBA,IAAlB,CAApB,CADF,CADC,CADe,CAApB,CAQA,KAAMC,CAAAA,aAAa,CAAGH,WAAW,CAACtE,MAAZ,CACpB;AACC0E,KAAD,EAAW,CAAClC,aAAa,CAACkC,KAAD,CAAb,CAAqBnD,IAArB,CAA0BC,KAA1B,CAAgCC,oBAAhC,CAFQ,CAAtB,CAKA,GAAIgD,aAAa,CAAC5F,MAAd,GAAyByF,WAAW,CAACzF,MAAzC,CAAiD,CAC/CyC,YAAY,CAAG,IAAf,CACD,CAED,GAAIT,iBAAiB,EAAI,CAACvC,OAAO,CAACU,WAAlC,CAA+C,CAC7C,KAAM2F,CAAAA,oBAAoB,CAAG,GAAIzD,CAAAA,GAAJ,EAA7B,CAEA,IAAK,KAAM0D,CAAAA,GAAX,GAAkBzD,CAAAA,MAAM,CAACC,IAAP,CAAYP,iBAAiB,CAACa,aAA9B,CAAlB,CAAgE,CAC9D;AACA,GAAI,CAACc,aAAa,CAACoC,GAAD,CAAd,EAAuB,CAAC3D,uBAAuB,CAAC4D,GAAxB,CAA4BD,GAA5B,CAA5B,CAA8D,CAC5D,SACD,CAED,GAAI/D,iBAAiB,CAACa,aAAlB,CAAgCkD,GAAhC,EAAqCE,QAArC,GAAkD,KAAtD,CAA6D,CAC3DH,oBAAoB,CAAChD,GAArB,CAAyBiD,GAAzB,EACD,CACF,CAED,GAAID,oBAAoB,CAACI,IAAzB,CAA+B,CAC7B,KAAM,IAAIjF,CAAAA,KAAJ,CACH,2CAA0C,CACzC,GAAG6E,oBADsC,EAEzCvE,IAFyC,CAEpC,IAFoC,CAE9B,KAAI4E,oCAA0B,IAHvC,CAAN,CAKD,CACF,CAED;AACA,GAAI1D,YAAJ,CAAkB,CAChB,GAAI,CAAChD,OAAO,CAACsB,MAAb,CAAqB,CACnBpB,GAAG,CAAC2B,IAAJ,CACE8E,eAAMC,MAAN,CACG,qFADH,EAGG,IAHH,CAIED,eAAMC,MAAN,CACG,qDAAD,CACE,GADF,CAEED,eAAME,IAAN,CAAY,gDAAZ,CAHJ,CAJF,CASG,IATH,CAUEF,eAAMC,MAAN,CACG,6KADH,CAVF,CAaG,IAbH,CAcED,eAAMC,MAAN,CACG,oEADH,CAfJ,EAmBD,CACF,CAED,KAAME,CAAAA,QAAQ,CACZ,CAAC9G,OAAO,CAACsB,MAAT,EACAxC,cAAc,CACZqH,aAAa,CAAC5F,MADF,CAEX,GAAEL,GAAG,CAAC6G,QAAJ,CAAaxF,IAAK,IAAGvB,OAAO,CAACgH,aAAR,EAAyB,WAAY,EAFjD,CAFhB,CAMA,KAAMC,CAAAA,YAAY,CAAGjH,OAAO,CAACU,WAAR,CACjB4C,MADiB,CAEjB,eAAKA,MAAL,CAAa,YAAb,CAA2BvB,OAA3B,CAFJ,CAIA,KAAMmF,CAAAA,cAA6B,CAAG,EAAtC,CACA,GAAIC,CAAAA,kBAAkB,CAAG,KAAzB,CAEA,KAAMC,CAAAA,SAAS,CAAG,eAAKrH,GAAL,CAAUsH,oCAAV,CAAlB,CACA;AACA,GAAI,CAACrH,OAAO,CAACU,WAAT,EAAwB,mBAAW0G,SAAX,CAA5B,CAAmD,CACjD,GAAI,CAACpH,OAAO,CAACsB,MAAb,CAAqB,CACnBpB,GAAG,CAACqB,IAAJ,CAAS,4BAAT,EACD,CACD,KAAM,iCAAc6F,SAAd,CAAyB9D,MAAzB,CAAiC,CACrC5B,MAAM,CAACwE,IAAD,CAAO,CACX;AACA,MAAO,CAAChC,aAAa,CAACgC,IAAD,CAArB,CACD,CAJoC,CAAjC,CAAN,CAMD,CAED,KAAMoB,CAAAA,MAAM,CAAG,GAAIC,oBAAJ,CAAWpF,OAAO,CAACqF,OAAR,CAAgB,UAAhB,CAAX,CAAwC,CACrDC,UAAU,CAAE,CADyC,CAErDC,UAAU,CAAErH,OAFyC,CAGrDsH,mBAAmB,CAAExH,UAAU,CAACmE,YAAX,CAAwBsD,aAHQ,CAIrDC,cAAc,CAAE,CAAC,SAAD,CAJqC,CAAxC,CAAf,CAOAP,MAAM,CAACQ,SAAP,GAAmBC,IAAnB,CAAwBC,OAAO,CAACC,MAAhC,EACAX,MAAM,CAACY,SAAP,GAAmBH,IAAnB,CAAwBC,OAAO,CAACG,MAAhC,EAEA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CACA,KAAMC,CAAAA,UAAoB,CAAG,EAA7B,CAEA,KAAMC,CAAAA,OAAO,CAACC,GAAR,CACJpC,aAAa,CAACF,GAAd,CAAkB,KAAOC,CAAAA,IAAP,EAAgB,CAChC,KAAMzH,CAAAA,MAAM,CAAG,KAAM6I,CAAAA,MAAM,CAACkB,OAAP,CAAe,CAClCtC,IADkC,CAElCuC,OAAO,CAAEvE,aAAa,CAACgC,IAAD,CAFY,CAGlC1F,OAHkC,CAIlC8C,MAJkC,CAKlC2D,YALkC,CAMlC1C,UANkC,CAOlCoB,mBAPkC,CAQlCzE,UARkC,CASlCR,WAAW,CAAEV,OAAO,CAACU,WATa,CAUlCgI,UAAU,CAAE,mCAAuBvI,UAAU,CAACkB,MAAlC,CAVsB,CAWlCsH,aAAa,CAAExI,UAAU,CAACmE,YAAX,CAAwBqE,aAXL,CAYlCC,cAAc,CAAEzI,UAAU,CAACmE,YAAX,CAAwBsE,cAZN,CAAf,CAArB,CAeA,IAAK,KAAMC,CAAAA,UAAX,GAAyBpK,CAAAA,MAAM,CAACyI,cAAP,EAAyB,EAAlD,CAAsD,CACpD,KAAM,CAAEjE,IAAF,CAAQxE,MAAM,CAAEqK,mBAAhB,EAAwCD,UAA9C,CACA3B,cAAc,CAACjE,IAAD,CAAd,CAAuB6F,mBAAvB,CACA3B,kBAAkB,CAChBA,kBAAkB,EACjB4B,KAAK,CAACC,OAAN,CAAcF,mBAAd,cAAcA,mBAAmB,CAAEG,MAAnC,GACCH,mBAAmB,CAACG,MAApB,CAA2B1I,MAA3B,CAAoC,CAHxC,CAID,CACD6H,WAAW,CAAGA,WAAW,EAAI,CAAC,CAAC3J,MAAM,CAACyK,KAAtC,CACA,GAAI,CAAC,CAACzK,MAAM,CAACyK,KAAb,CAAoBb,UAAU,CAACxJ,IAAX,CAAgBqH,IAAhB,EAEpB,GACElG,OAAO,CAACU,WAAR,EACA,MAAOjC,CAAAA,MAAM,CAAC0K,yBAAd,GAA4C,WAF9C,CAGE,CACAlJ,aAAa,CAACmJ,0BAAd,CAAyClD,IAAzC,EACEzH,MAAM,CAAC0K,yBADT,CAED,CACD,GAAIrC,QAAJ,CAAcA,QAAQ,GACvB,CAnCD,CADI,CAAN,CAuCAQ,MAAM,CAAC+B,GAAP,GAEA;AACA,GAAI,CAACrJ,OAAO,CAACU,WAAT,EAAwB6B,iBAA5B,CAA+C,CAC7C,KAAM+F,CAAAA,OAAO,CAACC,GAAR,CACJ1F,MAAM,CAACC,IAAP,CAAYP,iBAAiB,CAAC+G,MAA9B,EAAsCrD,GAAtC,CAA0C,KAAOG,CAAAA,KAAP,EAAiB,CACzD,KAAM,CAAEmD,QAAF,EAAehH,iBAAiB,CAAE+G,MAAnB,CAA0BlD,KAA1B,CAArB,CACA,KAAMoD,CAAAA,QAAQ,CAAGD,QAAQ,EAAInD,KAA7B,CACA,KAAMqD,CAAAA,QAAQ,CAAG,yBAAYD,QAAZ,CAAsBhJ,OAAtB,CAA+BY,gBAA/B,CAAjB,CACA,KAAMsI,CAAAA,YAAY,CAAG,eACnBD,QADmB,CAEnB;AACA;AACAD,QAAQ,CACLG,MADH,CACU,CADV,EAEGC,KAFH,CAES,GAFT,EAGG3D,GAHH,CAGO,IAAM,IAHb,EAIGnE,IAJH,CAIQ,GAJR,CAJmB,CAArB,CAUAsE,KAAK,CAAG,yCAAkBA,KAAlB,CAAR,CAEA,KAAMyD,CAAAA,IAAI,CAAG,eAAKH,YAAL,CAAmBtD,KAAnB,CAAb,CACA,KAAM0D,CAAAA,QAAQ,CAAG,eACfxG,MADe,CAEd,GAAE8C,KAAM,GACPlF,UAAU,EAAIkF,KAAK,GAAK,QAAxB,CAAoC,GAAE2D,SAAI,OAA1C,CAAmD,EACpD,OAJc,CAAjB,CAMA,KAAMC,CAAAA,WAAW,CAAG,eAClB1G,MADkB,CAEjB,GAAE8C,KAAM,OAAMlF,UAAU,CAAI,GAAE6I,SAAI,OAAV,CAAmB,EAAG,OAF7B,CAApB,CAIA,KAAME,CAAAA,QAAQ,CAAG,eAAKhD,YAAL,CAAoB,GAAEb,KAAM,OAA5B,CAAjB,CAEA,KAAM5C,cAASC,KAAT,CAAe,kBAAQqG,QAAR,CAAf,CAAkC,CAAEpG,SAAS,CAAE,IAAb,CAAlC,CAAN,CACA,KAAMF,cAASC,KAAT,CAAe,kBAAQwG,QAAR,CAAf,CAAkC,CAAEvG,SAAS,CAAE,IAAb,CAAlC,CAAN,CACA,KAAMF,cAAS0G,QAAT,CAAmB,GAAEL,IAAK,OAA1B,CAAkCC,QAAlC,CAAN,CACA,KAAMtG,cAAS0G,QAAT,CAAmB,GAAEL,IAAK,OAA1B,CAAkCI,QAAlC,CAAN,CAEA,GAAI,KAAM7L,CAAAA,MAAM,CAAE,GAAEyL,IAAK,WAAT,CAAhB,CAAsC,CACpC,KAAMrG,cAASC,KAAT,CAAe,kBAAQuG,WAAR,CAAf,CAAqC,CAAEtG,SAAS,CAAE,IAAb,CAArC,CAAN,CACA,KAAMF,cAAS0G,QAAT,CAAmB,GAAEL,IAAK,WAA1B,CAAsCG,WAAtC,CAAN,CACD,CACF,CAtCD,CADI,CAAN,CAyCD,CAED,GAAInH,MAAM,CAACC,IAAP,CAAYoE,cAAZ,EAA4B3G,MAAhC,CAAwC,CACtCZ,OAAO,CAACC,GAAR,CAAY,6BAAkBsH,cAAlB,CAAZ,EACD,CACD,GAAIC,kBAAJ,CAAwB,CACtB,KAAM,IAAI3F,CAAAA,KAAJ,CACH,+FADG,CAAN,CAGD,CAED,GAAI4G,WAAJ,CAAiB,CACf,KAAM,IAAI5G,CAAAA,KAAJ,CACH,oDAAmD6G,UAAU,CAC3D8B,IADiD,GAEjDrI,IAFiD,CAE5C,MAF4C,CAEpC,EAHZ,CAAN,CAKD,CAED,sBACE,eAAKtB,OAAL,CAAcmD,yBAAd,CADF,CAEEC,IAAI,CAACC,SAAL,CAAe,CACbC,OAAO,CAAE,CADI,CAEbC,YAAY,CAAET,MAFD,CAGbU,OAAO,CAAE,IAHI,CAAf,CAFF,CAOE,MAPF,EAUA,GAAIvD,SAAJ,CAAe,CACb,KAAMA,CAAAA,SAAS,CAAC2J,KAAV,EAAN,CACD,CACF","sourcesContent":["import chalk from 'next/dist/compiled/chalk'\nimport findUp from 'next/dist/compiled/find-up'\nimport {\n  promises,\n  existsSync,\n  exists as existsOrig,\n  readFileSync,\n  writeFileSync,\n} from 'fs'\nimport Worker from 'jest-worker'\nimport { cpus } from 'os'\nimport { dirname, join, resolve, sep } from 'path'\nimport { promisify } from 'util'\nimport { AmpPageStatus, formatAmpMessages } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport createSpinner from '../build/spinner'\nimport { API_ROUTE, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CONFIG_FILE,\n  EXPORT_DETAIL,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n} from '../next-server/lib/constants'\nimport loadConfig, {\n  isTargetLikeServerless,\n} from '../next-server/server/config'\nimport { eventCliSession } from '../telemetry/events'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { Telemetry } from '../telemetry/storage'\nimport {\n  normalizePagePath,\n  denormalizePagePath,\n} from '../next-server/server/normalize-page-path'\nimport { loadEnvConfig } from '@next/env'\nimport { PrerenderManifest } from '../build'\nimport type exportPage from './worker'\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { getPagePath } from '../next-server/server/require'\n\nconst exists = promisify(existsOrig)\n\nfunction divideSegments(number: number, segments: number): number[] {\n  const result = []\n  while (number > 0 && segments > 0) {\n    const dividedNumber = Math.floor(number / segments)\n    number -= dividedNumber\n    segments--\n    result.push(dividedNumber)\n  }\n  return result\n}\n\nconst createProgress = (total: number, label: string) => {\n  const segments = divideSegments(total, 4)\n\n  let currentSegmentTotal = segments.shift()\n  let currentSegmentCount = 0\n  let curProgress = 0\n  let progressSpinner = createSpinner(`${label} (${curProgress}/${total})`, {\n    spinner: {\n      frames: [\n        '[    ]',\n        '[=   ]',\n        '[==  ]',\n        '[=== ]',\n        '[ ===]',\n        '[  ==]',\n        '[   =]',\n        '[    ]',\n        '[   =]',\n        '[  ==]',\n        '[ ===]',\n        '[====]',\n        '[=== ]',\n        '[==  ]',\n        '[=   ]',\n      ],\n      interval: 80,\n    },\n  })\n\n  return () => {\n    curProgress++\n    currentSegmentCount++\n\n    // Make sure we only log once per fully generated segment\n    if (currentSegmentCount !== currentSegmentTotal) {\n      return\n    }\n\n    currentSegmentTotal = segments.shift()\n    currentSegmentCount = 0\n\n    const newText = `${label} (${curProgress}/${total})`\n    if (progressSpinner) {\n      progressSpinner.text = newText\n    } else {\n      console.log(newText)\n    }\n\n    if (curProgress === total && progressSpinner) {\n      progressSpinner.stop()\n      console.log(newText)\n    }\n  }\n}\n\ntype ExportPathMap = {\n  [page: string]: { page: string; query?: { [key: string]: string } }\n}\n\ninterface ExportOptions {\n  outdir: string\n  silent?: boolean\n  threads?: number\n  pages?: string[]\n  buildExport?: boolean\n  statusMessage?: string\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportOptions,\n  configuration?: any\n): Promise<void> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  loadEnvConfig(dir, false, Log)\n\n  const nextConfig = configuration || loadConfig(PHASE_EXPORT, dir)\n  const threads = options.threads || Math.max(cpus().length - 1, 1)\n  const distDir = join(dir, nextConfig.distDir)\n\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(PHASE_EXPORT, distDir, {\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash\n  const isLikeServerless = nextConfig.target !== 'server'\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  if (!existsSync(distDir)) {\n    throw new Error(\n      `Build directory ${distDir} does not exist. Make sure you run \"next build\" before running \"next start\" or \"next export\".`\n    )\n  }\n\n  const customRoutesDetected = ['rewrites', 'redirects', 'headers'].filter(\n    (config) => typeof nextConfig[config] === 'function'\n  )\n\n  if (\n    !hasNextSupport &&\n    !options.buildExport &&\n    customRoutesDetected.length > 0\n  ) {\n    Log.warn(\n      `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutesDetected.join(\n        ', '\n      )}). See more info here: https://err.sh/next.js/export-no-custom-routes`\n    )\n  }\n\n  const buildId = readFileSync(join(distDir, BUILD_ID_FILE), 'utf8')\n  const pagesManifest =\n    !options.pages &&\n    (require(join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )) as PagesManifest)\n\n  let prerenderManifest: PrerenderManifest | undefined = undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch (_) {}\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n  let hasApiRoutes = false\n\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (page.match(API_ROUTE)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new Error(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://err.sh/vercel/next.js/can-not-output-to-public`\n    )\n  }\n\n  await recursiveDelete(join(outDir))\n  await promises.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  writeFileSync(\n    join(distDir, EXPORT_DETAIL),\n    JSON.stringify({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await recursiveCopy(\n      join(distDir, CLIENT_STATIC_FILES_PATH),\n      join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n    )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    if (!options.silent) {\n      Log.info(\n        `No \"exportPathMap\" found in \"${CONFIG_FILE}\". Generating map from \"./pages\"`\n      )\n    }\n    nextConfig.exportPathMap = async (defaultMap: ExportPathMap) => {\n      return defaultMap\n    }\n  }\n\n  const { i18n } = nextConfig.experimental\n\n  // Start the rendering process\n  const renderOpts = {\n    dir,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    hotReloader: null,\n    basePath: nextConfig.basePath,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    isModern: nextConfig.experimental.modern,\n    ampValidatorPath: nextConfig.experimental.amp?.validator || undefined,\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n    locales: i18n?.locales,\n    locale: i18n.defaultLocale,\n    defaultLocale: i18n.defaultLocale,\n  }\n\n  const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    ;(renderOpts as any).runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(global as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`Launching ${threads} workers`)\n  }\n  const exportPathMap = await nextConfig.exportPathMap(defaultPathMap, {\n    dev: false,\n    dir,\n    outDir,\n    distDir,\n    buildId,\n  })\n\n  if (!exportPathMap['/404'] && !exportPathMap['/404.html']) {\n    exportPathMap['/404'] = exportPathMap['/404.html'] = {\n      page: '/_error',\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    // Remove API routes\n    (route) => !exportPathMap[route].page.match(API_ROUTE)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const key of Object.keys(prerenderManifest.dynamicRoutes)) {\n      // only error if page is included in path map\n      if (!exportPathMap[key] && !excludedPrerenderRoutes.has(key)) {\n        continue\n      }\n\n      if (prerenderManifest.dynamicRoutes[key].fallback !== false) {\n        fallbackEnabledPages.add(key)\n      }\n    }\n\n    if (fallbackEnabledPages.size) {\n      throw new Error(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n\n  // Warn if the user defines a path for an API page\n  if (hasApiRoutes) {\n    if (!options.silent) {\n      Log.warn(\n        chalk.yellow(\n          `Statically exporting a Next.js application via \\`next export\\` disables API routes.`\n        ) +\n          `\\n` +\n          chalk.yellow(\n            `This command is meant for static-only hosts, and is` +\n              ' ' +\n              chalk.bold(`not necessary to make your application static.`)\n          ) +\n          `\\n` +\n          chalk.yellow(\n            `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n          ) +\n          `\\n` +\n          chalk.yellow(\n            `Learn more: https://err.sh/vercel/next.js/api-routes-static-export`\n          )\n      )\n    }\n  }\n\n  const progress =\n    !options.silent &&\n    createProgress(\n      filteredPaths.length,\n      `${Log.prefixes.info} ${options.statusMessage || 'Exporting'}`\n    )\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n  let hadValidationError = false\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await recursiveCopy(publicDir, outDir, {\n      filter(path) {\n        // Exclude paths used by pages\n        return !exportPathMap[path]\n      },\n    })\n  }\n\n  const worker = new Worker(require.resolve('./worker'), {\n    maxRetries: 0,\n    numWorkers: threads,\n    enableWorkerThreads: nextConfig.experimental.workerThreads,\n    exposedMethods: ['default'],\n  }) as Worker & { default: typeof exportPage }\n\n  worker.getStdout().pipe(process.stdout)\n  worker.getStderr().pipe(process.stderr)\n\n  let renderError = false\n  const errorPaths: string[] = []\n\n  await Promise.all(\n    filteredPaths.map(async (path) => {\n      const result = await worker.default({\n        path,\n        pathMap: exportPathMap[path],\n        distDir,\n        outDir,\n        pagesDataDir,\n        renderOpts,\n        serverRuntimeConfig,\n        subFolders,\n        buildExport: options.buildExport,\n        serverless: isTargetLikeServerless(nextConfig.target),\n        optimizeFonts: nextConfig.experimental.optimizeFonts,\n        optimizeImages: nextConfig.experimental.optimizeImages,\n      })\n\n      for (const validation of result.ampValidations || []) {\n        const { page, result: ampValidationResult } = validation\n        ampValidations[page] = ampValidationResult\n        hadValidationError =\n          hadValidationError ||\n          (Array.isArray(ampValidationResult?.errors) &&\n            ampValidationResult.errors.length > 0)\n      }\n      renderError = renderError || !!result.error\n      if (!!result.error) errorPaths.push(path)\n\n      if (\n        options.buildExport &&\n        typeof result.fromBuildExportRevalidate !== 'undefined'\n      ) {\n        configuration.initialPageRevalidationMap[path] =\n          result.fromBuildExportRevalidate\n      }\n      if (progress) progress()\n    })\n  )\n\n  worker.end()\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const pageName = srcRoute || route\n        const pagePath = getPagePath(pageName, distDir, isLikeServerless)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .substr(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n        route = normalizePagePath(route)\n\n        const orig = join(distPagesDir, route)\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = join(pagesDataDir, `${route}.json`)\n\n        await promises.mkdir(dirname(htmlDest), { recursive: true })\n        await promises.mkdir(dirname(jsonDest), { recursive: true })\n        await promises.copyFile(`${orig}.html`, htmlDest)\n        await promises.copyFile(`${orig}.json`, jsonDest)\n\n        if (await exists(`${orig}.amp.html`)) {\n          await promises.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await promises.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new Error(\n      `AMP Validation caused the export to fail. https://err.sh/vercel/next.js/amp-export-validation`\n    )\n  }\n\n  if (renderError) {\n    throw new Error(\n      `Export encountered errors on following paths:\\n\\t${errorPaths\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  writeFileSync(\n    join(distDir, EXPORT_DETAIL),\n    JSON.stringify({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n}\n"]}
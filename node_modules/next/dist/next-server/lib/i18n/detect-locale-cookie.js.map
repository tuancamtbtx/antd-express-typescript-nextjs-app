{"version":3,"sources":["../../../../next-server/lib/i18n/detect-locale-cookie.ts"],"names":["detectLocaleCookie","req","locales","detectedLocale","headers","cookie","includes","NEXT_LOCALE","cookies","some","locale"],"mappings":"mFAEO,QAASA,CAAAA,kBAAT,CAA4BC,GAA5B,CAAkDC,OAAlD,CAAqE,CAC1E,GAAIC,CAAAA,cAAJ,CAEA,GAAIF,GAAG,CAACG,OAAJ,CAAYC,MAAZ,EAAsBJ,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmBC,QAAnB,CAA4B,aAA5B,CAA1B,CAAsE,CACpE,KAAM,CAAEC,WAAF,EAAmBN,GAAD,CAAaO,OAArC,CAEA,GAAIN,OAAO,CAACO,IAAR,CAAcC,MAAD,EAAoBH,WAAW,GAAKG,MAAjD,CAAJ,CAA8D,CAC5DP,cAAc,CAAGI,WAAjB,CACD,CACF,CAED,MAAOJ,CAAAA,cAAP,CACD","sourcesContent":["import { IncomingMessage } from 'http'\n\nexport function detectLocaleCookie(req: IncomingMessage, locales: string[]) {\n  let detectedLocale: string | undefined\n\n  if (req.headers.cookie && req.headers.cookie.includes('NEXT_LOCALE')) {\n    const { NEXT_LOCALE } = (req as any).cookies\n\n    if (locales.some((locale: string) => NEXT_LOCALE === locale)) {\n      detectedLocale = NEXT_LOCALE\n    }\n  }\n\n  return detectedLocale\n}\n"]}
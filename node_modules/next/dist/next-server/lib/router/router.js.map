{"version":3,"sources":["../../../../next-server/lib/router/router.ts"],"names":["basePath","process","env","__NEXT_ROUTER_BASEPATH","buildCancellationError","Object","assign","Error","cancelled","addPathPrefix","path","prefix","startsWith","addLocale","locale","defaultLocale","__NEXT_i18n_SUPPORT","delLocale","substr","length","hasBasePath","addBasePath","delBasePath","slice","isLocalURL","url","locationOrigin","resolved","URL","origin","pathname","_","interpolateAs","route","asPathname","query","interpolatedRoute","dynamicRegex","dynamicGroups","groups","dynamicMatches","params","keys","every","param","value","repeat","optional","replaced","Array","isArray","replace","map","escapePathDelimiters","join","result","omitParmsFromQuery","filteredQuery","forEach","key","includes","resolveHref","currentPath","href","resolveAs","base","urlAsString","finalUrl","interpolatedAs","searchParams","hash","resolvedHref","PAGE_LOAD_ERROR","Symbol","markLoadingError","err","defineProperty","prepareUrlAs","router","as","manualScrollRestoration","__NEXT_SCROLL_RESTORATION","window","history","fetchRetry","attempts","fetch","credentials","then","res","ok","status","json","fetchNextData","dataHref","isServerRender","catch","Router","constructor","initialProps","pageLoader","App","wrapApp","Component","initialStyleSheets","subscription","isFallback","locales","asPath","components","sdc","sub","clc","_bps","events","_wrapApp","isSsr","_inFlightRoute","_shallow","onPopState","e","state","changeState","__N","options","change","shallow","styleSheets","props","__N_SSG","__N_SSP","__NEXT_DATA__","autoExport","addEventListener","scrollRestoration","scrollDebounceTimeout","debouncedScrollSave","clearTimeout","setTimeout","curAs","_N_X","scrollX","_N_Y","scrollY","reload","location","back","push","method","_h","ST","performance","mark","abortComponentLoad","cleanedAs","onlyAHashChange","emit","scrollToHash","notify","pages","getPageList","__rewrites","rewrites","promisedBuildManifest","parsed","_resolveHref","urlIsNew","resolvedAs","__NEXT_HAS_REWRITES","p","potentialHref","parsedAs","routeRegex","routeMatch","shouldInterpolate","missingParams","filter","NODE_ENV","console","warn","routeInfo","getRouteInfo","error","pageProps","__N_REDIRECT","destination","parsedHref","Promise","appComp","next","isPrerendered","getInitialProps","origGetInitialProps","set","scrollTo","handleRouteInfoError","loadErrorFail","page","fetchComponent","gipErr","routeInfoErr","cachedRouteInfo","mod","isValidElementType","require","getDataHref","_getData","_getStaticData","_getServerData","data","beforePopState","cb","oldUrlNoHash","oldHash","split","newUrlNoHash","newHash","idEl","document","getElementById","scrollIntoView","nameEl","getElementsByName","applyBasePath","cleanPathname","some","re","test","prefetch","all","prefetchData","priority","cancel","componentResult","loadPage","fn","cacheKey","resolve","ctx","AppTree"],"mappings":"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","sourcesContent":["/* global __NEXT_DATA__ */\n// tslint:disable:no-console\nimport { ParsedUrlQuery } from 'querystring'\nimport { ComponentType } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  normalizePathTrailingSlash,\n  removePathTrailingSlash,\n} from '../../../client/normalize-trailing-slash'\nimport { GoodPageCache, StyleSheetTuple } from '../../../client/page-loader'\nimport { denormalizePagePath } from '../../server/denormalize-page-path'\nimport mitt, { MittEmitter } from '../mitt'\nimport {\n  AppContextType,\n  formatWithValidation,\n  getLocationOrigin,\n  getURL,\n  loadGetInitialProps,\n  NextPageContext,\n  ST,\n} from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { searchParamsToUrlQuery } from './utils/querystring'\nimport resolveRewrites from './utils/resolve-rewrites'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\nimport escapePathDelimiters from './utils/escape-path-delimiters'\n\ninterface TransitionOptions {\n  shallow?: boolean\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\ntype HistoryState = null | { __N: false } | ({ __N: true } & NextHistoryState)\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\nfunction addPathPrefix(path: string, prefix?: string) {\n  return prefix && path.startsWith('/')\n    ? path === '/'\n      ? normalizePathTrailingSlash(prefix)\n      : `${prefix}${path}`\n    : path\n}\n\nexport function addLocale(\n  path: string,\n  locale?: string,\n  defaultLocale?: string\n) {\n  if (process.env.__NEXT_i18n_SUPPORT) {\n    return locale && locale !== defaultLocale && !path.startsWith('/' + locale)\n      ? addPathPrefix(path, '/' + locale)\n      : path\n  }\n  return path\n}\n\nexport function delLocale(path: string, locale?: string) {\n  if (process.env.__NEXT_i18n_SUPPORT) {\n    return locale && path.startsWith('/' + locale)\n      ? path.substr(locale.length + 1) || '/'\n      : path\n  }\n  return path\n}\n\nexport function hasBasePath(path: string): boolean {\n  return path === basePath || path.startsWith(basePath + '/')\n}\n\nexport function addBasePath(path: string): string {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath)\n}\n\nexport function delBasePath(path: string): string {\n  return path.slice(basePath.length) || '/'\n}\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  if (url.startsWith('/')) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n\ntype Url = UrlObject | string\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[]).map(escapePathDelimiters).join('/')\n              : escapePathDelimiters(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n\nfunction omitParmsFromQuery(query: ParsedUrlQuery, params: string[]) {\n  const filteredQuery: ParsedUrlQuery = {}\n\n  Object.keys(query).forEach((key) => {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key]\n    }\n  })\n  return filteredQuery\n}\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  currentPath: string,\n  href: Url,\n  resolveAs?: boolean\n): string {\n  // we use a dummy base url for relative urls\n  const base = new URL(currentPath, 'http://n')\n  const urlAsString =\n    typeof href === 'string' ? href : formatWithValidation(href)\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return (resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref) as string\n  } catch (_) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n}\n\nconst PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR')\nexport function markLoadingError(err: Error): Error {\n  return Object.defineProperty(err, PAGE_LOAD_ERROR, {})\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  return {\n    url: addBasePath(resolveHref(router.pathname, url)),\n    as: as ? addBasePath(resolveHref(router.pathname, as)) : as,\n  }\n}\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n}\n\nexport type PrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n}\n\nexport type AppProps = Pick<PrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (data: PrivateRouteInfo, App: AppComponent) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history\n\nfunction fetchRetry(url: string, attempts: number): Promise<any> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n  }).then((res) => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1)\n      }\n      throw new Error(`Failed to load static props`)\n    }\n\n    return res.json()\n  })\n}\n\nfunction fetchNextData(dataHref: string, isServerRender: boolean) {\n  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch((err: Error) => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      markLoadingError(err)\n    }\n    throw err\n  })\n}\n\nexport default class Router implements BaseRouter {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Static Data Cache\n  sdc: { [asPath: string]: object } = {}\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: any\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  isFallback: boolean\n  _inFlightRoute?: string\n  _shallow?: boolean\n  locale?: string\n  locales?: string[]\n  defaultLocale?: string\n\n  static events: MittEmitter = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      initialStyleSheets,\n      err,\n      subscription,\n      isFallback,\n      locale,\n      locales,\n      defaultLocale,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      initialStyleSheets: StyleSheetTuple[]\n      App: AppComponent\n      wrapApp: (App: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n      locale?: string\n      locales?: string[]\n      defaultLocale?: string\n    }\n  ) {\n    // represents the current component key\n    this.route = removePathTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[this.route] = {\n        Component,\n        styleSheets: initialStyleSheets,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    this.pathname = pathname\n    this.query = query\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    this.asPath =\n      // @ts-ignore this is temporarily global (attached to window)\n      isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as\n    this.basePath = basePath\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n\n    this.isFallback = isFallback\n\n    if (process.env.__NEXT_i18n_SUPPORT) {\n      this.locale = locale\n      this.locales = locales\n      this.defaultLocale = defaultLocale\n    }\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (as.substr(0, 2) !== '//') {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        this.changeState(\n          'replaceState',\n          formatWithValidation({ pathname: addBasePath(pathname), query }),\n          getURL()\n        )\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n\n          let scrollDebounceTimeout: undefined | NodeJS.Timeout\n\n          const debouncedScrollSave = () => {\n            if (scrollDebounceTimeout) clearTimeout(scrollDebounceTimeout)\n\n            scrollDebounceTimeout = setTimeout(() => {\n              const { url, as: curAs, options } = history.state\n              this.changeState(\n                'replaceState',\n                url,\n                curAs,\n                Object.assign({}, options, {\n                  _N_X: window.scrollX,\n                  _N_Y: window.scrollY,\n                })\n              )\n            }, 10)\n          }\n\n          window.addEventListener('scroll', debouncedScrollSave)\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    const { url, as, options } = state\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (this.isSsr && as === this.asPath && pathname === this.pathname) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n      })\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as: Url = url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      window.location.href = url\n      return false\n    }\n\n    if (!(options as any)._h) {\n      this.isSsr = false\n    }\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute)\n    }\n\n    as = addLocale(as, this.locale, this.defaultLocale)\n    const cleanedAs = delLocale(\n      hasBasePath(as) ? delBasePath(as) : as,\n      this.locale\n    )\n    this._inFlightRoute = as\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    if (!(options as any)._h && this.onlyAHashChange(cleanedAs)) {\n      this.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, options)\n      this.scrollToHash(cleanedAs)\n      this.notify(this.components[this.route])\n      Router.events.emit('hashChangeComplete', as)\n      return true\n    }\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    const pages = await this.pageLoader.getPageList()\n    const { __rewrites: rewrites } = await this.pageLoader.promisedBuildManifest\n\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname, query } = parsed\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removePathTrailingSlash(delBasePath(pathname))\n      : pathname\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs)) {\n      method = 'replaceState'\n    }\n\n    let route = removePathTrailingSlash(pathname)\n    const { shallow = false } = options\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    if (process.env.__NEXT_HAS_REWRITES) {\n      resolvedAs = resolveRewrites(\n        parseRelativeUrl(as).pathname,\n        pages,\n        basePath,\n        rewrites,\n        query,\n        (p: string) => this._resolveHref({ pathname: p }, pages).pathname!\n      )\n\n      if (resolvedAs !== as) {\n        const potentialHref = removePathTrailingSlash(\n          this._resolveHref(\n            Object.assign({}, parsed, { pathname: resolvedAs }),\n            pages,\n            false\n          ).pathname!\n        )\n\n        // if this directly matches a page we need to update the href to\n        // allow the correct page chunk to be loaded\n        if (pages.includes(potentialHref)) {\n          route = potentialHref\n          pathname = potentialHref\n          parsed.pathname = pathname\n          url = formatWithValidation(parsed)\n        }\n      }\n    }\n    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale)\n\n    if (isDynamicRoute(route)) {\n      const parsedAs = parseRelativeUrl(resolvedAs)\n      const asPathname = parsedAs.pathname\n\n      const routeRegex = getRouteRegex(route)\n      const routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      const shouldInterpolate = route === asPathname\n      const interpolatedAs = shouldInterpolate\n        ? interpolateAs(route, asPathname, query)\n        : ({} as { result: undefined; params: undefined })\n\n      if (!routeMatch || (shouldInterpolate && !interpolatedAs.result)) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param]\n        )\n\n        if (missingParams.length > 0) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `${\n                shouldInterpolate\n                  ? `Interpolating href`\n                  : `Mismatching \\`as\\` and \\`href\\``\n              } failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            (shouldInterpolate\n              ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\n                  ', '\n                )}) to be interpolated properly. `\n              : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) +\n              `Read more: https://err.sh/vercel/next.js/${\n                shouldInterpolate\n                  ? 'href-interpolation-failed'\n                  : 'incompatible-href-as'\n              }`\n          )\n        }\n      } else if (shouldInterpolate) {\n        as = formatWithValidation(\n          Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omitParmsFromQuery(query, interpolatedAs.params!),\n          })\n        )\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as)\n\n    try {\n      const routeInfo = await this.getRouteInfo(\n        route,\n        pathname,\n        query,\n        as,\n        shallow\n      )\n      let { error, props, __N_SSG, __N_SSP } = routeInfo\n\n      // handle redirect on client-transition\n      if (\n        (__N_SSG || __N_SSP) &&\n        props &&\n        (props as any).pageProps &&\n        (props as any).pageProps.__N_REDIRECT\n      ) {\n        const destination = (props as any).pageProps.__N_REDIRECT\n\n        // check if destination is internal (resolves to a page) and attempt\n        // client-navigation if it is falling back to hard navigation if\n        // it's not\n        if (destination.startsWith('/')) {\n          const parsedHref = parseRelativeUrl(destination)\n          this._resolveHref(parsedHref, pages)\n\n          if (pages.includes(parsedHref.pathname)) {\n            return this.change(\n              'replaceState',\n              destination,\n              destination,\n              options\n            )\n          }\n        }\n\n        window.location.href = destination\n        return new Promise(() => {})\n      }\n\n      Router.events.emit('beforeHistoryChange', as)\n      this.changeState(\n        method,\n        url,\n        addLocale(as, this.locale, this.defaultLocale),\n        options\n      )\n\n      if (process.env.NODE_ENV !== 'production') {\n        const appComp: any = this.components['/_app'].Component\n        ;(window as any).next.isPrerendered =\n          appComp.getInitialProps === appComp.origGetInitialProps &&\n          !(routeInfo.Component as any).getInitialProps\n      }\n\n      await this.set(route, pathname!, query, cleanedAs, routeInfo).catch(\n        (e) => {\n          if (e.cancelled) error = error || e\n          else throw e\n        }\n      )\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs)\n        throw error\n      }\n\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration && '_N_X' in options) {\n          window.scrollTo((options as any)._N_X, (options as any)._N_Y)\n        }\n      }\n      Router.events.emit('routeChangeComplete', as)\n\n      return true\n    } catch (err) {\n      if (err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code: any; cancelled: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    loadErrorFail?: boolean\n  ): Promise<PrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (PAGE_LOAD_ERROR in err || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      window.location.href = as\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    try {\n      const { page: Component, styleSheets } = await this.fetchComponent(\n        '/_error'\n      )\n      const routeInfo: PrivateRouteInfo = {\n        Component,\n        styleSheets,\n        err,\n        error: err,\n      }\n\n      try {\n        routeInfo.props = await this.getInitialProps(Component, {\n          err,\n          pathname,\n          query,\n        } as any)\n      } catch (gipErr) {\n        console.error('Error in error page `getInitialProps`: ', gipErr)\n        routeInfo.props = {}\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true)\n    }\n  }\n\n  async getRouteInfo(\n    route: string,\n    pathname: string,\n    query: any,\n    as: string,\n    shallow: boolean = false\n  ): Promise<PrivateRouteInfo> {\n    try {\n      const cachedRouteInfo = this.components[route]\n\n      if (shallow && cachedRouteInfo && this.route === route) {\n        return cachedRouteInfo\n      }\n\n      const routeInfo: PrivateRouteInfo = cachedRouteInfo\n        ? cachedRouteInfo\n        : await this.fetchComponent(route).then((res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          }))\n\n      const { Component, __N_SSG, __N_SSP } = routeInfo\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } = require('react-is')\n        if (!isValidElementType(Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n\n      let dataHref: string | undefined\n\n      if (__N_SSG || __N_SSP) {\n        dataHref = this.pageLoader.getDataHref(\n          formatWithValidation({ pathname, query }),\n          delBasePath(as),\n          __N_SSG,\n          this.locale,\n          this.defaultLocale\n        )\n      }\n\n      const props = await this._getData<PrivateRouteInfo>(() =>\n        __N_SSG\n          ? this._getStaticData(dataHref!)\n          : __N_SSP\n          ? this._getServerData(dataHref!)\n          : this.getInitialProps(\n              Component,\n              // we provide AppTree later so this needs to be `any`\n              {\n                pathname,\n                query,\n                asPath: as,\n              } as any\n            )\n      )\n\n      routeInfo.props = props\n      this.components[route] = routeInfo\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(err, pathname, query, as)\n    }\n  }\n\n  set(\n    route: string,\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    data: PrivateRouteInfo\n  ): Promise<void> {\n    this.isFallback = false\n\n    this.route = route\n    this.pathname = pathname\n    this.query = query\n    this.asPath = as\n    return this.notify(data)\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#')\n    const [newUrlNoHash, newHash] = as.split('#')\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash] = as.split('#')\n    // Scroll to top if the hash is just `#` with no value\n    if (hash === '') {\n      window.scrollTo(0, 0)\n      return\n    }\n\n    // First we check if the element by id is found\n    const idEl = document.getElementById(hash)\n    if (idEl) {\n      idEl.scrollIntoView()\n      return\n    }\n    // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n    const nameEl = document.getElementsByName(hash)[0]\n    if (nameEl) {\n      nameEl.scrollIntoView()\n    }\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  _resolveHref(parsedHref: UrlObject, pages: string[], applyBasePath = true) {\n    const { pathname } = parsedHref\n    const cleanPathname = removePathTrailingSlash(\n      denormalizePagePath(applyBasePath ? delBasePath(pathname!) : pathname!)\n    )\n\n    if (cleanPathname === '/404' || cleanPathname === '/_error') {\n      return parsedHref\n    }\n\n    // handle resolving href for dynamic routes\n    if (!pages.includes(cleanPathname!)) {\n      // eslint-disable-next-line array-callback-return\n      pages.some((page) => {\n        if (\n          isDynamicRoute(page) &&\n          getRouteRegex(page).re.test(cleanPathname!)\n        ) {\n          parsedHref.pathname = applyBasePath ? addBasePath(page) : page\n          return true\n        }\n      })\n    }\n    return parsedHref\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    let parsed = parseRelativeUrl(url)\n\n    let { pathname } = parsed\n\n    const pages = await this.pageLoader.getPageList()\n\n    parsed = this._resolveHref(parsed, pages) as typeof parsed\n\n    if (parsed.pathname !== pathname) {\n      pathname = parsed.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    const route = removePathTrailingSlash(pathname)\n    await Promise.all([\n      this.pageLoader.prefetchData(\n        url,\n        asPath,\n        this.locale,\n        this.defaultLocale\n      ),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string): Promise<GoodPageCache> {\n    let cancelled = false\n    const cancel = (this.clc = () => {\n      cancelled = true\n    })\n\n    const componentResult = await this.pageLoader.loadPage(route)\n\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === this.clc) {\n      this.clc = null\n    }\n\n    return componentResult\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  _getStaticData(dataHref: string): Promise<object> {\n    const { href: cacheKey } = new URL(dataHref, window.location.href)\n    if (process.env.NODE_ENV === 'production' && this.sdc[cacheKey]) {\n      return Promise.resolve(this.sdc[cacheKey])\n    }\n    return fetchNextData(dataHref, this.isSsr).then((data) => {\n      this.sdc[cacheKey] = data\n      return data\n    })\n  }\n\n  _getServerData(dataHref: string): Promise<object> {\n    return fetchNextData(dataHref, this.isSsr)\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<any> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  abortComponentLoad(as: string): void {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as)\n      this.clc()\n      this.clc = null\n    }\n  }\n\n  notify(data: PrivateRouteInfo): Promise<void> {\n    return this.sub(data, this.components['/_app'].Component as AppComponent)\n  }\n}\n"]}
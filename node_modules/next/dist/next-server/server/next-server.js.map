{"version":3,"sources":["../../../next-server/server/next-server.ts"],"names":["getCustomRouteMatcher","Server","constructor","dir","quiet","conf","dev","minimalMode","customServer","nextConfig","distDir","pagesDir","publicDir","hasStaticDir","serverBuildDir","pagesManifest","buildId","renderOpts","compression","onErrorMiddleware","incrementalCache","router","dynamicRoutes","customRoutes","_cachedPreviewManifest","customErrorNo404Warn","console","warn","chalk","bold","yellow","_validFilesystemPathSet","phase","currentPhase","Log","CLIENT_PUBLIC_FILES_PATH","fs","existsSync","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","compress","readBuildId","poweredByHeader","canonicalBase","amp","previewProps","getPreviewProps","undefined","ampOptimizerConfig","experimental","optimizer","basePath","images","JSON","stringify","optimizeFonts","fontManifest","_isLikeServerless","optimizeImages","optimizeCss","Object","keys","length","runtimeConfig","target","envConfig","setConfig","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","pagesManifestPath","PAGES_MANIFEST","require","getCustomRoutes","Router","generateRoutes","setAssetPrefix","plugins","initServer","default","IncrementalCache","locales","i18n","flushToDisk","sprFlushToDisk","process","env","__NEXT_OPTIMIZE_FONTS","__NEXT_OPTIMIZE_IMAGES","__NEXT_OPTIMIZE_CSS","PHASE_PRODUCTION_SERVER","logError","err","error","handleRequest","req","res","parsedUrl","url","query","__NEXT_INIT_QUERY","assign","startsWith","_nextHadBasePath","replace","pathname","parsed","defaultLocale","detectedLocale","acceptPreferredLocale","localeDetection","accept","language","headers","host","hostname","split","toLowerCase","detectedDomain","domains","localeDomainRedirect","__nextHadTrailingSlash","endsWith","trailingSlash","localePathResult","__nextStrippedLocale","localeToCheck","matchedDomain","domain","http","denormalizedPagePath","detectedDefaultLocale","shouldStripDefaultLocale","shouldAddLocalePrefix","previous","getHeader","setHeader","Array","isArray","cookie","serialize","httpOnly","path","statusCode","TEMPORARY_REDIRECT_STATUS","end","__nextDefaultLocale","__nextLocale","reqUrlIsDataUrl","includes","matchedPathIsDataUrl","isDataUrl","parsedPath","matchedPathname","matchedPathnameNoExt","utils","pageIsDynamic","page","rewrites","params","paramsResult","normalizeDynamicRouteParams","hasValidParams","opts","getParamsFromRouteMatches","locale","dynamicRouteMatcher","interpolateDynamicPath","normalizeVercelUrl","run","getRequestHandler","bind","prefix","prepare","close","setImmutableAssetCacheControl","ROUTES_MANIFEST","getPrerenderManifest","manifest","PRERENDER_MANIFEST","preview","server","publicRoutes","generatePublicRoutes","staticFilesRoute","match","name","fn","p","serveStatic","finished","fsRoutes","type","render404","CLIENT_STATIC_FILES_RUNTIME","CLIENT_STATIC_FILES_PATH","_parsedUrl","shift","join","render","_nextDataReq","_params","getCustomRoute","r","source","_req","_res","map","headerRoute","hasParams","header","key","value","stringifyQuery","initialQueryValues","values","encodeURIComponent","some","val","redirects","redirect","redirectRoute","internal","parsedDestination","destination","search","updatedDestination","rewrite","rewriteRoute","check","newUrl","protocol","proxy","Proxy","changeOrigin","ignorePath","web","on","_nextRewroteUrl","_nextDidRewrite","catchAllRoute","Error","handled","handleApiRequest","useFileSystemPublicRoutes","getDynamicRoutes","pageChecker","hasPage","getPagePath","found","_","_beforeCatchAllRender","ensureApiPage","_pathname","pageFound","dynamicRoute","builtPagePath","code","pageModule","prepareServerlessUrl","publicFiles","Set","encodeURI","pathParts","basePathParts","every","part","idx","splice","has","addedPages","add","filter","item","Boolean","handleCompression","matched","execute","renderError","sendHTML","html","renderToHTML","findPageComponents","paths","pagePath","components","Component","getStaticProps","getStaticPaths","staticPaths","fallbackField","fallback","fallbackMode","renderToHTMLWithComponents","is404Page","isLikeServerless","renderReqToHTML","isSSG","isServerProps","getServerSideProps","hasStaticPaths","isDataReq","previewData","isPreviewMode","urlPathname","resolvedUrlPathname","stripNextDataPath","pop","handleRedirect","pageData","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","PERMANENT_REDIRECT_STATUS","ssgCacheKey","cachedData","get","data","revalidateOptions","private","stateful","revalidate","curRevalidate","isNotFound","isStale","maybeCoalesceInvoke","isOrigin","doRender","sprRevalidate","isRedirect","renderResult","origQuery","hadTrailingSlash","resolvedUrl","resolvedAsPath","isProduction","isDynamicPathname","didRespond","NoFallbackError","getFallback","__nextFallback","resHtml","set","result","dynamicRouteResult","renderErrorToHTML","setHeaders","is404","using404Page","NODE_ENV","maybeFallbackError","renderToHtmlError","isServeableUrl","method","getFilesystemPaths","pathUserFilesStatic","userFilesStatic","f","userFilesPublic","nextFilesStatic","untrustedFileUrl","decodedUntrustedFilePath","decodeURIComponent","untrustedFilePath","indexOf","sep","filesystemUrls","resolved","buildIdFile","BUILD_ID_FILE","readFileSync","trim","curUrl"],"mappings":"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","sourcesContent":["import compression from 'next/dist/compiled/compression'\nimport fs from 'fs'\nimport chalk from 'chalk'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport Proxy from 'next/dist/compiled/http-proxy'\nimport { join, relative, resolve, sep } from 'path'\nimport {\n  parse as parseQs,\n  stringify as stringifyQs,\n  ParsedUrlQuery,\n} from 'querystring'\nimport { format as formatUrl, parse as parseUrl, UrlWithParsedQuery } from 'url'\nimport { PrerenderManifest } from '../../build'\nimport {\n  getRedirectStatus,\n  Header,\n  Redirect,\n  Rewrite,\n  RouteType,\n  CustomRoutes,\n} from '../../lib/load-custom-routes'\nimport { withCoalescedInvoke } from '../../lib/coalesced-function'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CLIENT_STATIC_FILES_RUNTIME,\n  PAGES_MANIFEST,\n  PERMANENT_REDIRECT_STATUS,\n  PHASE_PRODUCTION_SERVER,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n  TEMPORARY_REDIRECT_STATUS,\n} from '../lib/constants'\nimport {\n  getRouteMatcher,\n  getRouteRegex,\n  getSortedRoutes,\n  isDynamicRoute,\n} from '../lib/router/utils'\nimport * as envConfig from '../lib/runtime-config'\nimport { isResSent, NextApiRequest, NextApiResponse } from '../lib/utils'\nimport {\n  apiResolver,\n  setLazyProp,\n  getCookieParser,\n  tryGetPreviewData,\n  __ApiPreviewProps,\n} from './api-utils'\nimport loadConfig, { isTargetLikeServerless, NextConfig } from './config'\nimport pathMatch from '../lib/router/utils/path-match'\nimport { recursiveReadDirSync } from './lib/recursive-readdir-sync'\nimport { loadComponents, LoadComponentsReturnType } from './load-components'\nimport { normalizePagePath } from './normalize-page-path'\nimport { RenderOpts, RenderOptsPartial, renderToHTML } from './render'\nimport { getPagePath, requireFontManifest } from './require'\nimport Router, {\n  DynamicRoutes,\n  PageChecker,\n  Params,\n  route,\n  Route,\n} from './router'\nimport prepareDestination, {\n  compileNonPath,\n} from '../lib/router/utils/prepare-destination'\nimport { sendPayload, setRevalidateHeaders } from './send-payload'\nimport { serveStatic } from './serve-static'\nimport { IncrementalCache } from './incremental-cache'\nimport { execOnce } from '../lib/utils'\nimport { isBlockedPage } from './utils'\nimport { loadEnvConfig } from '@next/env'\nimport './node-polyfill-fetch'\nimport { PagesManifest } from '../../build/webpack/plugins/pages-manifest-plugin'\nimport { removePathTrailingSlash } from '../../client/normalize-trailing-slash'\nimport getRouteFromAssetPath from '../lib/router/utils/get-route-from-asset-path'\nimport { FontManifest } from './font-utils'\nimport { denormalizePagePath } from './denormalize-page-path'\nimport accept from '@hapi/accept'\nimport { normalizeLocalePath } from '../lib/i18n/normalize-locale-path'\nimport { detectLocaleCookie } from '../lib/i18n/detect-locale-cookie'\nimport * as Log from '../../build/output/log'\nimport { imageOptimizer } from './image-optimizer'\nimport { detectDomainLocale } from '../lib/i18n/detect-domain-locale'\nimport cookie from 'next/dist/compiled/cookie'\nimport { getUtils } from '../../build/webpack/loaders/next-serverless-loader/utils'\n\nconst getCustomRouteMatcher = pathMatch(true)\n\ntype Middleware = (\n  req: IncomingMessage,\n  res: ServerResponse,\n  next: (err?: Error) => void\n) => void\n\ntype FindComponentsResult = {\n  components: LoadComponentsReturnType\n  query: ParsedUrlQuery\n}\n\ntype DynamicRouteItem = {\n  page: string\n  match: ReturnType<typeof getRouteMatcher>\n}\n\nexport type ServerConstructor = {\n  /**\n   * Where the Next project is located - @default '.'\n   */\n  dir?: string\n  /**\n   * Hide error messages containing server information - @default false\n   */\n  quiet?: boolean\n  /**\n   * Object what you would use in next.config.js - @default {}\n   */\n  conf?: NextConfig | null\n  dev?: boolean\n  customServer?: boolean\n}\n\nexport default class Server {\n  dir: string\n  quiet: boolean\n  nextConfig: NextConfig\n  distDir: string\n  pagesDir?: string\n  publicDir: string\n  hasStaticDir: boolean\n  serverBuildDir: string\n  pagesManifest?: PagesManifest\n  buildId: string\n  minimalMode: boolean\n  renderOpts: {\n    poweredByHeader: boolean\n    buildId: string\n    generateEtags: boolean\n    runtimeConfig?: { [key: string]: any }\n    assetPrefix?: string\n    canonicalBase: string\n    dev?: boolean\n    previewProps: __ApiPreviewProps\n    customServer?: boolean\n    ampOptimizerConfig?: { [key: string]: any }\n    basePath: string\n    optimizeFonts: boolean\n    images: string\n    fontManifest: FontManifest\n    optimizeImages: boolean\n    optimizeCss: any\n    locale?: string\n    locales?: string[]\n    defaultLocale?: string\n  }\n  private compression?: Middleware\n  private onErrorMiddleware?: ({ err }: { err: Error }) => Promise<void>\n  private incrementalCache: IncrementalCache\n  router: Router\n  protected dynamicRoutes?: DynamicRoutes\n  protected customRoutes: CustomRoutes\n\n  public constructor({\n    dir = '.',\n    quiet = false,\n    conf = null,\n    dev = false,\n    minimalMode = false,\n    customServer = true,\n  }: ServerConstructor & { minimalMode?: boolean } = {}) {\n    this.dir = resolve(dir)\n    this.quiet = quiet\n    const phase = this.currentPhase()\n    loadEnvConfig(this.dir, dev, Log)\n\n    this.nextConfig = loadConfig(phase, this.dir, conf)\n    this.distDir = join(this.dir, this.nextConfig.distDir)\n    this.publicDir = join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n    this.hasStaticDir = fs.existsSync(join(this.dir, 'static'))\n\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags,\n      compress,\n    } = this.nextConfig\n\n    this.buildId = this.readBuildId()\n    this.minimalMode = minimalMode\n\n    this.renderOpts = {\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase,\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPreviewProps(),\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: this.nextConfig.experimental.amp?.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: JSON.stringify(this.nextConfig.images),\n      optimizeFonts: this.nextConfig.experimental.optimizeFonts && !dev,\n      fontManifest:\n        this.nextConfig.experimental.optimizeFonts && !dev\n          ? requireFontManifest(this.distDir, this._isLikeServerless)\n          : null,\n      optimizeImages: this.nextConfig.experimental.optimizeImages,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n    }\n\n    // Only the `publicRuntimeConfig` key is exposed to the client side\n    // It'll be rendered as part of __NEXT_DATA__ on the client side\n    if (Object.keys(publicRuntimeConfig).length > 0) {\n      this.renderOpts.runtimeConfig = publicRuntimeConfig\n    }\n\n    if (compress && this.nextConfig.target === 'server') {\n      this.compression = compression() as Middleware\n    }\n\n    // Initialize next/config with the environment configuration\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig,\n    })\n\n    this.serverBuildDir = join(\n      this.distDir,\n      this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY\n    )\n    const pagesManifestPath = join(this.serverBuildDir, PAGES_MANIFEST)\n\n    if (!dev) {\n      this.pagesManifest = require(pagesManifestPath)\n    }\n\n    this.customRoutes = this.getCustomRoutes()\n    this.router = new Router(this.generateRoutes())\n    this.setAssetPrefix(assetPrefix)\n\n    // call init-server middleware, this is also handled\n    // individually in serverless bundles when deployed\n    if (!dev && this.nextConfig.experimental.plugins) {\n      const initServer = require(join(this.serverBuildDir, 'init-server.js'))\n        .default\n      this.onErrorMiddleware = require(join(\n        this.serverBuildDir,\n        'on-error-server.js'\n      )).default\n      initServer()\n    }\n\n    this.incrementalCache = new IncrementalCache({\n      dev,\n      distDir: this.distDir,\n      pagesDir: join(\n        this.distDir,\n        this._isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n        'pages'\n      ),\n      locales: this.nextConfig.i18n?.locales,\n      flushToDisk: !minimalMode && this.nextConfig.experimental.sprFlushToDisk,\n    })\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targetting both serverless and SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_IMAGES`.\n     * TODO(atcastle@): Remove this when experimental.optimizeImages are being clened up.\n     */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeImages) {\n      process.env.__NEXT_OPTIMIZE_IMAGES = JSON.stringify(true)\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n  }\n\n  protected currentPhase(): string {\n    return PHASE_PRODUCTION_SERVER\n  }\n\n  public logError(err: Error): void {\n    if (this.onErrorMiddleware) {\n      this.onErrorMiddleware({ err })\n    }\n    if (this.quiet) return\n    console.error(err)\n  }\n\n  private async handleRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    setLazyProp({ req: req as any }, 'cookies', getCookieParser(req))\n\n    // Parse url if parsedUrl not provided\n    if (!parsedUrl || typeof parsedUrl !== 'object') {\n      const url: any = req.url\n      parsedUrl = parseUrl(url, true)\n    }\n\n    // Parse the querystring ourselves if the user doesn't handle querystring parsing\n    if (typeof parsedUrl.query === 'string') {\n      parsedUrl.query = parseQs(parsedUrl.query)\n    }\n    ;(req as any).__NEXT_INIT_QUERY = Object.assign({}, parsedUrl.query)\n\n    const { basePath, i18n } = this.nextConfig\n\n    if (basePath && req.url?.startsWith(basePath)) {\n      // store original URL to allow checking if basePath was\n      // provided or not\n      ;(req as any)._nextHadBasePath = true\n      req.url = req.url!.replace(basePath, '') || '/'\n    }\n\n    if (i18n && !req.url?.startsWith('/_next')) {\n      // get pathname from URL with basePath stripped for locale detection\n      let { pathname, ...parsed } = parseUrl(req.url || '/')\n      pathname = pathname || '/'\n\n      let defaultLocale = i18n.defaultLocale\n      let detectedLocale = detectLocaleCookie(req, i18n.locales)\n      let acceptPreferredLocale =\n        i18n.localeDetection !== false\n          ? accept.language(req.headers['accept-language'], i18n.locales)\n          : detectedLocale\n\n      const { host } = req?.headers || {}\n      // remove port from host and remove port if present\n      const hostname = host?.split(':')[0].toLowerCase()\n\n      const detectedDomain = detectDomainLocale(i18n.domains, hostname)\n      if (detectedDomain) {\n        defaultLocale = detectedDomain.defaultLocale\n        detectedLocale = defaultLocale\n      }\n\n      // if not domain specific locale use accept-language preferred\n      detectedLocale = detectedLocale || acceptPreferredLocale\n\n      let localeDomainRedirect: string | undefined\n      ;(req as any).__nextHadTrailingSlash = pathname!.endsWith('/')\n\n      if (pathname === '/') {\n        ;(req as any).__nextHadTrailingSlash = this.nextConfig.trailingSlash\n      }\n      const localePathResult = normalizeLocalePath(pathname!, i18n.locales)\n\n      if (localePathResult.detectedLocale) {\n        detectedLocale = localePathResult.detectedLocale\n        req.url = formatUrl({\n          ...parsed,\n          pathname: localePathResult.pathname,\n        })\n        ;(req as any).__nextStrippedLocale = true\n      }\n\n      // If a detected locale is a domain specific locale and we aren't already\n      // on that domain and path prefix redirect to it to prevent duplicate\n      // content from multiple domains\n      if (detectedDomain && pathname === '/') {\n        const localeToCheck = acceptPreferredLocale\n        // const localeToCheck = localePathResult.detectedLocale\n        //   ? detectedLocale\n        //   : acceptPreferredLocale\n\n        const matchedDomain = detectDomainLocale(\n          i18n.domains,\n          undefined,\n          localeToCheck\n        )\n\n        if (\n          matchedDomain &&\n          (matchedDomain.domain !== detectedDomain.domain ||\n            localeToCheck !== matchedDomain.defaultLocale)\n        ) {\n          localeDomainRedirect = `http${matchedDomain.http ? '' : 's'}://${\n            matchedDomain.domain\n          }/${\n            localeToCheck === matchedDomain.defaultLocale ? '' : localeToCheck\n          }`\n        }\n      }\n\n      const denormalizedPagePath = denormalizePagePath(pathname || '/')\n      const detectedDefaultLocale =\n        !detectedLocale ||\n        detectedLocale.toLowerCase() === defaultLocale.toLowerCase()\n      const shouldStripDefaultLocale = false\n      // detectedDefaultLocale &&\n      // denormalizedPagePath.toLowerCase() ===\n      //   `/${i18n.defaultLocale.toLowerCase()}`\n\n      const shouldAddLocalePrefix =\n        !detectedDefaultLocale && denormalizedPagePath === '/'\n\n      detectedLocale = detectedLocale || i18n.defaultLocale\n\n      if (\n        i18n.localeDetection !== false &&\n        (localeDomainRedirect ||\n          shouldAddLocalePrefix ||\n          shouldStripDefaultLocale)\n      ) {\n        // set the NEXT_LOCALE cookie when a user visits the default locale\n        // with the locale prefix so that they aren't redirected back to\n        // their accept-language preferred locale\n        if (\n          shouldStripDefaultLocale &&\n          acceptPreferredLocale !== defaultLocale\n        ) {\n          const previous = res.getHeader('set-cookie')\n\n          res.setHeader('set-cookie', [\n            ...(typeof previous === 'string'\n              ? [previous]\n              : Array.isArray(previous)\n              ? previous\n              : []),\n            cookie.serialize('NEXT_LOCALE', defaultLocale, {\n              httpOnly: true,\n              path: '/',\n            }),\n          ])\n        }\n\n        res.setHeader(\n          'Location',\n          localeDomainRedirect\n            ? localeDomainRedirect\n            : formatUrl({\n                // make sure to include any query values when redirecting\n                ...parsed,\n                pathname: shouldStripDefaultLocale\n                  ? basePath || `/`\n                  : `${basePath || ''}/${detectedLocale}`,\n              })\n        )\n        res.statusCode = TEMPORARY_REDIRECT_STATUS\n        res.end()\n        return\n      }\n\n      parsedUrl.query.__nextDefaultLocale =\n        detectedDomain?.defaultLocale || i18n.defaultLocale\n\n      parsedUrl.query.__nextLocale =\n        localePathResult.detectedLocale ||\n        detectedDomain?.defaultLocale ||\n        defaultLocale\n    }\n\n    if (\n      this.minimalMode &&\n      req.headers['x-matched-path'] &&\n      typeof req.headers['x-matched-path'] === 'string'\n    ) {\n      const reqUrlIsDataUrl = req.url?.includes('/_next/data')\n      const matchedPathIsDataUrl = req.headers['x-matched-path']?.includes(\n        '/_next/data'\n      )\n      const isDataUrl = reqUrlIsDataUrl || matchedPathIsDataUrl\n\n      let parsedPath = parseUrl(\n        isDataUrl ? req.url! : (req.headers['x-matched-path'] as string),\n        true\n      )\n      const { pathname, query } = parsedPath\n      let matchedPathname = pathname as string\n\n      const matchedPathnameNoExt = isDataUrl\n        ? matchedPathname.replace(/\\.json$/, '')\n        : matchedPathname\n\n      // interpolate dynamic params and normalize URL if needed\n      if (isDynamicRoute(matchedPathnameNoExt)) {\n        const utils = getUtils({\n          pageIsDynamic: true,\n          page: matchedPathnameNoExt,\n          i18n: this.nextConfig.i18n,\n          basePath: this.nextConfig.basePath,\n          rewrites: this.customRoutes.rewrites,\n        })\n\n        let params: ParsedUrlQuery | false = {}\n        const paramsResult = utils.normalizeDynamicRouteParams({\n          ...parsedUrl.query,\n          ...query,\n        })\n\n        if (paramsResult.hasValidParams) {\n          params = paramsResult.params\n        } else if (req.headers['x-now-route-matches']) {\n          const opts: Record<string, string> = {}\n          params = utils.getParamsFromRouteMatches(\n            req,\n            opts,\n            (parsedUrl.query.__nextLocale as string | undefined) || ''\n          )\n\n          if (opts.locale) {\n            parsedUrl.query.__nextLocale = opts.locale\n          }\n        } else {\n          params = utils.dynamicRouteMatcher!(matchedPathname)\n        }\n\n        if (params) {\n          matchedPathname = utils.interpolateDynamicPath(\n            matchedPathname,\n            params\n          )\n\n          req.url = utils.interpolateDynamicPath(req.url!, params)\n        }\n\n        if (reqUrlIsDataUrl && matchedPathIsDataUrl) {\n          req.url = formatUrl({\n            ...parsedPath,\n            pathname: matchedPathname,\n          })\n        }\n        Object.assign(parsedUrl.query, params)\n        utils.normalizeVercelUrl(req, true)\n      }\n      parsedUrl.pathname = `${basePath || ''}${\n        parsedUrl.query.__nextLocale || ''\n      }${matchedPathname}`\n    }\n\n    res.statusCode = 200\n    try {\n      return await this.run(req, res, parsedUrl)\n    } catch (err) {\n      this.logError(err)\n      res.statusCode = 500\n      res.end('Internal Server Error')\n    }\n  }\n\n  public getRequestHandler() {\n    return this.handleRequest.bind(this)\n  }\n\n  public setAssetPrefix(prefix?: string): void {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, '') : ''\n  }\n\n  // Backwards compatibility\n  public async prepare(): Promise<void> {}\n\n  // Backwards compatibility\n  protected async close(): Promise<void> {}\n\n  protected setImmutableAssetCacheControl(res: ServerResponse): void {\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable')\n  }\n\n  protected getCustomRoutes(): CustomRoutes {\n    return require(join(this.distDir, ROUTES_MANIFEST))\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    const manifest = require(join(this.distDir, PRERENDER_MANIFEST))\n    return (this._cachedPreviewManifest = manifest)\n  }\n\n  protected getPreviewProps(): __ApiPreviewProps {\n    return this.getPrerenderManifest().preview\n  }\n\n  protected generateRoutes(): {\n    basePath: string\n    headers: Route[]\n    rewrites: Route[]\n    fsRoutes: Route[]\n    redirects: Route[]\n    catchAllRoute: Route\n    pageChecker: PageChecker\n    useFileSystemPublicRoutes: boolean\n    dynamicRoutes: DynamicRoutes | undefined\n    locales: string[]\n  } {\n    const server: Server = this\n    const publicRoutes = fs.existsSync(this.publicDir)\n      ? this.generatePublicRoutes()\n      : []\n\n    const staticFilesRoute = this.hasStaticDir\n      ? [\n          {\n            // It's very important to keep this route's param optional.\n            // (but it should support as many params as needed, separated by '/')\n            // Otherwise this will lead to a pretty simple DOS attack.\n            // See more: https://github.com/vercel/next.js/issues/2617\n            match: route('/static/:path*'),\n            name: 'static catchall',\n            fn: async (req, res, params, parsedUrl) => {\n              const p = join(this.dir, 'static', ...params.path)\n              await this.serveStatic(req, res, p, parsedUrl)\n              return {\n                finished: true,\n              }\n            },\n          } as Route,\n        ]\n      : []\n\n    const fsRoutes: Route[] = [\n      {\n        match: route('/_next/static/:path*'),\n        type: 'route',\n        name: '_next/static catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          // make sure to 404 for /_next/static itself\n          if (!params.path) {\n            await this.render404(req, res, parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          if (\n            params.path[0] === CLIENT_STATIC_FILES_RUNTIME ||\n            params.path[0] === 'chunks' ||\n            params.path[0] === 'css' ||\n            params.path[0] === 'media' ||\n            params.path[0] === this.buildId ||\n            params.path[0] === 'pages' ||\n            params.path[1] === 'pages'\n          ) {\n            this.setImmutableAssetCacheControl(res)\n          }\n          const p = join(\n            this.distDir,\n            CLIENT_STATIC_FILES_PATH,\n            ...(params.path || [])\n          )\n          await this.serveStatic(req, res, p, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/data/:path*'),\n        type: 'route',\n        name: '_next/data catchall',\n        fn: async (req, res, params, _parsedUrl) => {\n          // Make sure to 404 for /_next/data/ itself and\n          // we also want to 404 if the buildId isn't correct\n          if (!params.path || params.path[0] !== this.buildId) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n          // remove buildId from URL\n          params.path.shift()\n\n          // show 404 if it doesn't end with .json\n          if (!params.path[params.path.length - 1].endsWith('.json')) {\n            await this.render404(req, res, _parsedUrl)\n            return {\n              finished: true,\n            }\n          }\n\n          // re-create page's pathname\n          let pathname = `/${params.path.join('/')}`\n          pathname = getRouteFromAssetPath(pathname, '.json')\n\n          const { i18n } = this.nextConfig\n\n          if (i18n) {\n            const { host } = req?.headers || {}\n            // remove port from host and remove port if present\n            const hostname = host?.split(':')[0].toLowerCase()\n            const localePathResult = normalizeLocalePath(pathname, i18n.locales)\n            const { defaultLocale } =\n              detectDomainLocale(i18n.domains, hostname) || {}\n\n            let detectedLocale = ''\n\n            if (localePathResult.detectedLocale) {\n              pathname = localePathResult.pathname\n              detectedLocale = localePathResult.detectedLocale\n            }\n\n            _parsedUrl.query.__nextLocale = detectedLocale!\n            _parsedUrl.query.__nextDefaultLocale =\n              defaultLocale || i18n.defaultLocale\n\n            if (!detectedLocale) {\n              _parsedUrl.query.__nextLocale =\n                _parsedUrl.query.__nextDefaultLocale\n              await this.render404(req, res, _parsedUrl)\n              return { finished: true }\n            }\n          }\n\n          const parsedUrl = parseUrl(pathname, true)\n\n          await this.render(\n            req,\n            res,\n            pathname,\n            { ..._parsedUrl.query, _nextDataReq: '1' },\n            parsedUrl\n          )\n          return {\n            finished: true,\n          }\n        },\n      },\n      {\n        match: route('/_next/image'),\n        type: 'route',\n        name: '_next/image catchall',\n        fn: (req, res, _params, parsedUrl) =>\n          imageOptimizer(server, req, res, parsedUrl),\n      },\n      {\n        match: route('/_next/:path*'),\n        type: 'route',\n        name: '_next catchall',\n        // This path is needed because `render()` does a check for `/_next` and the calls the routing again\n        fn: async (req, res, _params, parsedUrl) => {\n          await this.render404(req, res, parsedUrl)\n          return {\n            finished: true,\n          }\n        },\n      },\n      ...publicRoutes,\n      ...staticFilesRoute,\n    ]\n\n    const getCustomRoute = (\n      r: Rewrite | Redirect | Header,\n      type: RouteType\n    ) => {\n      const match = getCustomRouteMatcher(r.source)\n\n      return {\n        ...r,\n        type,\n        match,\n        name: type,\n        fn: async (_req, _res, _params, _parsedUrl) => ({ finished: false }),\n      } as Route & Rewrite & Header\n    }\n\n    // Headers come very first\n    const headers = this.customRoutes.headers.map((r) => {\n      const headerRoute = getCustomRoute(r, 'header')\n      return {\n        match: headerRoute.match,\n        type: headerRoute.type,\n        name: `${headerRoute.type} ${headerRoute.source} header route`,\n        fn: async (_req, res, params, _parsedUrl) => {\n          const hasParams = Object.keys(params).length > 0\n\n          for (const header of (headerRoute as Header).headers) {\n            let { key, value } = header\n            if (hasParams) {\n              key = compileNonPath(key, params)\n              value = compileNonPath(value, params)\n            }\n            res.setHeader(key, value)\n          }\n          return { finished: false }\n        },\n      } as Route\n    })\n\n    // since initial query values are decoded by querystring.parse\n    // we need to re-encode them here but still allow passing through\n    // values from rewrites/redirects\n    const stringifyQuery = (req: IncomingMessage, query: ParsedUrlQuery) => {\n      const initialQueryValues = Object.values((req as any).__NEXT_INIT_QUERY)\n\n      return stringifyQs(query, undefined, undefined, {\n        encodeURIComponent(value) {\n          if (initialQueryValues.some((val) => val === value)) {\n            return encodeURIComponent(value)\n          }\n          return value\n        },\n      })\n    }\n\n    const redirects = this.minimalMode\n      ? []\n      : this.customRoutes.redirects.map((redirect) => {\n          const redirectRoute = getCustomRoute(redirect, 'redirect')\n          return {\n            internal: redirectRoute.internal,\n            type: redirectRoute.type,\n            match: redirectRoute.match,\n            statusCode: redirectRoute.statusCode,\n            name: `Redirect route ${redirectRoute.source}`,\n            fn: async (req, res, params, parsedUrl) => {\n              const { parsedDestination } = prepareDestination(\n                redirectRoute.destination,\n                params,\n                parsedUrl.query,\n                false\n              )\n\n              const { query } = parsedDestination\n              delete (parsedDestination as any).query\n\n              parsedDestination.search = stringifyQuery(req, query)\n\n              const updatedDestination = formatUrl(parsedDestination)\n\n              res.setHeader('Location', updatedDestination)\n              res.statusCode = getRedirectStatus(redirectRoute as Redirect)\n\n              // Since IE11 doesn't support the 308 header add backwards\n              // compatibility using refresh header\n              if (res.statusCode === 308) {\n                res.setHeader('Refresh', `0;url=${updatedDestination}`)\n              }\n\n              res.end()\n              return {\n                finished: true,\n              }\n            },\n          } as Route\n        })\n\n    const rewrites = this.customRoutes.rewrites.map((rewrite) => {\n      const rewriteRoute = getCustomRoute(rewrite, 'rewrite')\n      return {\n        ...rewriteRoute,\n        check: true,\n        type: rewriteRoute.type,\n        name: `Rewrite route ${rewriteRoute.source}`,\n        match: rewriteRoute.match,\n        fn: async (req, res, params, parsedUrl) => {\n          const { newUrl, parsedDestination } = prepareDestination(\n            rewriteRoute.destination,\n            params,\n            parsedUrl.query,\n            true\n          )\n\n          // external rewrite, proxy it\n          if (parsedDestination.protocol) {\n            const { query } = parsedDestination\n            delete (parsedDestination as any).query\n            parsedDestination.search = stringifyQuery(req, query)\n\n            const target = formatUrl(parsedDestination)\n            const proxy = new Proxy({\n              target,\n              changeOrigin: true,\n              ignorePath: true,\n            })\n            proxy.web(req, res)\n\n            proxy.on('error', (err: Error) => {\n              console.error(`Error occurred proxying ${target}`, err)\n            })\n            return {\n              finished: true,\n            }\n          }\n          ;(req as any)._nextRewroteUrl = newUrl\n          ;(req as any)._nextDidRewrite =\n            (req as any)._nextRewroteUrl !== req.url\n\n          return {\n            finished: false,\n            pathname: newUrl,\n            query: parsedDestination.query,\n          }\n        },\n      } as Route\n    })\n\n    const catchAllRoute: Route = {\n      match: route('/:path*'),\n      type: 'route',\n      name: 'Catchall render',\n      fn: async (req, res, params, parsedUrl) => {\n        let { pathname, query } = parsedUrl\n        if (!pathname) {\n          throw new Error('pathname is undefined')\n        }\n\n        // next.js core assumes page path without trailing slash\n        pathname = removePathTrailingSlash(pathname)\n\n        if (this.nextConfig.i18n) {\n          const localePathResult = normalizeLocalePath(\n            pathname,\n            this.nextConfig.i18n?.locales\n          )\n\n          if (localePathResult.detectedLocale) {\n            pathname = localePathResult.pathname\n            parsedUrl.query.__nextLocale = localePathResult.detectedLocale\n          }\n        }\n\n        if (params?.path?.[0] === 'api') {\n          const handled = await this.handleApiRequest(\n            req as NextApiRequest,\n            res as NextApiResponse,\n            pathname,\n            query\n          )\n          if (handled) {\n            return { finished: true }\n          }\n        }\n\n        await this.render(req, res, pathname, query, parsedUrl)\n        return {\n          finished: true,\n        }\n      },\n    }\n\n    const { useFileSystemPublicRoutes } = this.nextConfig\n\n    if (useFileSystemPublicRoutes) {\n      this.dynamicRoutes = this.getDynamicRoutes()\n    }\n\n    return {\n      headers,\n      fsRoutes,\n      rewrites,\n      redirects,\n      catchAllRoute,\n      useFileSystemPublicRoutes,\n      dynamicRoutes: this.dynamicRoutes,\n      basePath: this.nextConfig.basePath,\n      pageChecker: this.hasPage.bind(this),\n      locales: this.nextConfig.i18n?.locales || [],\n    }\n  }\n\n  private async getPagePath(pathname: string): Promise<string> {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      this._isLikeServerless,\n      this.renderOpts.dev\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    let found = false\n    try {\n      found = !!(await this.getPagePath(pathname))\n    } catch (_) {}\n\n    return found\n  }\n\n  protected async _beforeCatchAllRender(\n    _req: IncomingMessage,\n    _res: ServerResponse,\n    _params: Params,\n    _parsedUrl: UrlWithParsedQuery\n  ): Promise<boolean> {\n    return false\n  }\n\n  // Used to build API page in development\n  protected async ensureApiPage(_pathname: string): Promise<void> {}\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  private async handleApiRequest(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery\n  ): Promise<boolean> {\n    let page = pathname\n    let params: Params | boolean = false\n    let pageFound = await this.hasPage(page)\n\n    if (!pageFound && this.dynamicRoutes) {\n      for (const dynamicRoute of this.dynamicRoutes) {\n        params = dynamicRoute.match(pathname)\n        if (dynamicRoute.page.startsWith('/api') && params) {\n          page = dynamicRoute.page\n          pageFound = true\n          break\n        }\n      }\n    }\n\n    if (!pageFound) {\n      return false\n    }\n    // Make sure the page is built before getting the path\n    // or else it won't be in the manifest yet\n    await this.ensureApiPage(page)\n\n    let builtPagePath\n    try {\n      builtPagePath = await this.getPagePath(page)\n    } catch (err) {\n      if (err.code === 'ENOENT') {\n        return false\n      }\n      throw err\n    }\n\n    const pageModule = await require(builtPagePath)\n    query = { ...query, ...params }\n\n    if (!this.renderOpts.dev && this._isLikeServerless) {\n      if (typeof pageModule.default === 'function') {\n        prepareServerlessUrl(req, query)\n        await pageModule.default(req, res)\n        return true\n      }\n    }\n\n    await apiResolver(\n      req,\n      res,\n      query,\n      pageModule,\n      this.renderOpts.previewProps,\n      false,\n      this.onErrorMiddleware\n    )\n    return true\n  }\n\n  protected generatePublicRoutes(): Route[] {\n    const publicFiles = new Set(\n      recursiveReadDirSync(this.publicDir).map((p) =>\n        encodeURI(p.replace(/\\\\/g, '/'))\n      )\n    )\n\n    return [\n      {\n        match: route('/:path*'),\n        name: 'public folder catchall',\n        fn: async (req, res, params, parsedUrl) => {\n          const pathParts: string[] = params.path || []\n          const { basePath } = this.nextConfig\n\n          // if basePath is defined require it be present\n          if (basePath) {\n            const basePathParts = basePath.split('/')\n            // remove first empty value\n            basePathParts.shift()\n\n            if (\n              !basePathParts.every((part: string, idx: number) => {\n                return part === pathParts[idx]\n              })\n            ) {\n              return { finished: false }\n            }\n\n            pathParts.splice(0, basePathParts.length)\n          }\n\n          const path = `/${pathParts.join('/')}`\n\n          if (publicFiles.has(path)) {\n            await this.serveStatic(\n              req,\n              res,\n              join(this.publicDir, ...pathParts),\n              parsedUrl\n            )\n            return {\n              finished: true,\n            }\n          }\n          return {\n            finished: false,\n          }\n        },\n      } as Route,\n    ]\n  }\n\n  protected getDynamicRoutes(): Array<DynamicRouteItem> {\n    const addedPages = new Set<string>()\n\n    return getSortedRoutes(\n      Object.keys(this.pagesManifest!).map(\n        (page) =>\n          normalizeLocalePath(page, this.nextConfig.i18n?.locales).pathname\n      )\n    )\n      .map((page) => {\n        if (addedPages.has(page) || !isDynamicRoute(page)) return null\n        addedPages.add(page)\n        return {\n          page,\n          match: getRouteMatcher(getRouteRegex(page)),\n        }\n      })\n      .filter((item): item is DynamicRouteItem => Boolean(item))\n  }\n\n  private handleCompression(req: IncomingMessage, res: ServerResponse): void {\n    if (this.compression) {\n      this.compression(req, res, () => {})\n    }\n  }\n\n  protected async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlWithParsedQuery\n  ): Promise<void> {\n    this.handleCompression(req, res)\n\n    try {\n      const matched = await this.router.execute(req, res, parsedUrl)\n      if (matched) {\n        return\n      }\n    } catch (err) {\n      if (err.code === 'DECODE_FAILED') {\n        res.statusCode = 400\n        return this.renderError(null, req, res, '/_error', {})\n      }\n      throw err\n    }\n\n    await this.render404(req, res, parsedUrl)\n  }\n\n  protected async sendHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    html: string\n  ): Promise<void> {\n    const { generateEtags, poweredByHeader } = this.renderOpts\n    return sendPayload(req, res, html, 'html', {\n      generateEtags,\n      poweredByHeader,\n    })\n  }\n\n  public async render(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!pathname.startsWith('/')) {\n      console.warn(\n        `Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://err.sh/next.js/render-no-starting-slash`\n      )\n    }\n\n    if (\n      this.renderOpts.customServer &&\n      pathname === '/index' &&\n      !(await this.hasPage('/index'))\n    ) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = '/'\n    }\n\n    const url: any = req.url\n\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (\n      !query._nextDataReq &&\n      (url.match(/^\\/_next\\//) ||\n        (this.hasStaticDir && url.match(/^\\/static\\//)))\n    ) {\n      return this.handleRequest(req, res, parsedUrl)\n    }\n\n    if (isBlockedPage(pathname)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    const html = await this.renderToHTML(req, res, pathname, query)\n    // Request was ended by the user\n    if (html === null) {\n      return\n    }\n\n    return this.sendHTML(req, res, html)\n  }\n\n  private async findPageComponents(\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    params: Params | null = null\n  ): Promise<FindComponentsResult | null> {\n    let paths = [\n      // try serving a static AMP version first\n      query.amp ? normalizePagePath(pathname) + '.amp' : null,\n      pathname,\n    ].filter(Boolean)\n\n    if (query.__nextLocale) {\n      paths = [\n        ...paths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        ),\n        ...paths,\n      ]\n    }\n\n    for (const pagePath of paths) {\n      try {\n        const components = await loadComponents(\n          this.distDir,\n          pagePath!,\n          !this.renderOpts.dev && this._isLikeServerless\n        )\n        // if loading an static HTML file the locale is required\n        // to be present since all HTML files are output under their locale\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath?.startsWith(`/${query.__nextLocale}`)\n        ) {\n          const err = new Error('NOT_FOUND')\n          ;(err as any).code = 'ENOENT'\n          throw err\n        }\n\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps\n              ? {\n                  amp: query.amp,\n                  _nextDataReq: query._nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                }\n              : query),\n            ...(params || {}),\n          },\n        }\n      } catch (err) {\n        if (err.code !== 'ENOENT') throw err\n      }\n    }\n    return null\n  }\n\n  protected async getStaticPaths(\n    pathname: string\n  ): Promise<{\n    staticPaths: string[] | undefined\n    fallbackMode: 'static' | 'blocking' | false\n  }> {\n    // `staticPaths` is intentionally set to `undefined` as it should've\n    // been caught when checking disk data.\n    const staticPaths = undefined\n\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField = this.getPrerenderManifest().dynamicRoutes[pathname]\n      .fallback\n\n    return {\n      staticPaths,\n      fallbackMode:\n        typeof fallbackField === 'string'\n          ? 'static'\n          : fallbackField === null\n          ? 'blocking'\n          : false,\n    }\n  }\n\n  private async renderToHTMLWithComponents(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    { components, query }: FindComponentsResult,\n    opts: RenderOptsPartial\n  ): Promise<string | null> {\n    const is404Page = pathname === '/404'\n\n    const isLikeServerless =\n      typeof components.Component === 'object' &&\n      typeof (components.Component as any).renderReqToHTML === 'function'\n    const isSSG = !!components.getStaticProps\n    const isServerProps = !!components.getServerSideProps\n    const hasStaticPaths = !!components.getStaticPaths\n\n    // Toggle whether or not this is a Data request\n    const isDataReq = !!query._nextDataReq && (isSSG || isServerProps)\n    delete query._nextDataReq\n\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isDataReq) {\n      res.statusCode = 404\n    }\n\n    // handle static page\n    if (typeof components.Component === 'string') {\n      return components.Component\n    }\n\n    if (!query.amp) {\n      delete query.amp\n    }\n\n    const locale = query.__nextLocale as string\n    const defaultLocale = isSSG\n      ? this.nextConfig.i18n?.defaultLocale\n      : (query.__nextDefaultLocale as string)\n\n    const { i18n } = this.nextConfig\n    const locales = i18n?.locales\n\n    let previewData: string | false | object | undefined\n    let isPreviewMode = false\n\n    if (isServerProps || isSSG) {\n      previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps)\n      isPreviewMode = previewData !== false\n    }\n\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = parseUrl(req.url || '').pathname || '/'\n\n    let resolvedUrlPathname = (req as any)._nextRewroteUrl\n      ? (req as any)._nextRewroteUrl\n      : urlPathname\n\n    resolvedUrlPathname = removePathTrailingSlash(resolvedUrlPathname)\n    urlPathname = removePathTrailingSlash(urlPathname)\n\n    const stripNextDataPath = (path: string) => {\n      if (path.includes(this.buildId)) {\n        path = denormalizePagePath(\n          (path.split(this.buildId).pop() || '/').replace(/\\.json$/, '')\n        )\n      }\n\n      if (this.nextConfig.i18n) {\n        return normalizeLocalePath(path, locales).pathname\n      }\n      return path\n    }\n\n    const handleRedirect = (pageData: any) => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH,\n      }\n      const statusCode = getRedirectStatus(redirect)\n      const { basePath } = this.nextConfig\n\n      if (basePath && redirect.basePath !== false) {\n        redirect.destination = `${basePath}${redirect.destination}`\n      }\n\n      if (statusCode === PERMANENT_REDIRECT_STATUS) {\n        res.setHeader('Refresh', `0;url=${redirect.destination}`)\n      }\n\n      res.statusCode = statusCode\n      res.setHeader('Location', redirect.destination)\n      res.end()\n    }\n\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq) {\n      resolvedUrlPathname = stripNextDataPath(resolvedUrlPathname)\n      urlPathname = stripNextDataPath(urlPathname)\n    }\n\n    let ssgCacheKey =\n      isPreviewMode || !isSSG || this.minimalMode\n        ? undefined // Preview mode bypasses the cache\n        : `${locale ? `/${locale}` : ''}${\n            (pathname === '/' || resolvedUrlPathname === '/') && locale\n              ? ''\n              : resolvedUrlPathname\n          }${query.amp ? '.amp' : ''}`\n\n    if (is404Page && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : ''}${pathname}${\n        query.amp ? '.amp' : ''\n      }`\n    }\n\n    // Complete the response with cached data if its present\n    const cachedData = ssgCacheKey\n      ? await this.incrementalCache.get(ssgCacheKey)\n      : undefined\n\n    if (cachedData) {\n      const data = isDataReq\n        ? JSON.stringify(cachedData.pageData)\n        : cachedData.html\n\n      const revalidateOptions = !this.renderOpts.dev\n        ? {\n            private: isPreviewMode,\n            stateful: false, // GSP response\n            revalidate:\n              cachedData.curRevalidate !== undefined\n                ? cachedData.curRevalidate\n                : /* default to minimum revalidate (this should be an invariant) */ 1,\n          }\n        : undefined\n\n      if (!isDataReq && cachedData.pageData?.pageProps?.__N_REDIRECT) {\n        await handleRedirect(cachedData.pageData)\n      } else if (cachedData.isNotFound) {\n        if (revalidateOptions) {\n          setRevalidateHeaders(res, revalidateOptions)\n        }\n        await this.render404(req, res, {\n          pathname,\n          query,\n        } as UrlWithParsedQuery)\n      } else {\n        sendPayload(\n          req,\n          res,\n          data,\n          isDataReq ? 'json' : 'html',\n          {\n            generateEtags: this.renderOpts.generateEtags,\n            poweredByHeader: this.renderOpts.poweredByHeader,\n          },\n          revalidateOptions\n        )\n      }\n\n      // Stop the request chain here if the data we sent was up-to-date\n      if (!cachedData.isStale) {\n        return null\n      }\n    }\n\n    // If we're here, that means data is missing or it's stale.\n    const maybeCoalesceInvoke = ssgCacheKey\n      ? (fn: any) => withCoalescedInvoke(fn).bind(null, ssgCacheKey!, [])\n      : (fn: any) => async () => {\n          const value = await fn()\n          return { isOrigin: true, value }\n        }\n\n    const doRender = maybeCoalesceInvoke(\n      async (): Promise<{\n        html: string | null\n        pageData: any\n        sprRevalidate: number | false\n        isNotFound?: boolean\n        isRedirect?: boolean\n      }> => {\n        let pageData: any\n        let html: string | null\n        let sprRevalidate: number | false\n        let isNotFound: boolean | undefined\n        let isRedirect: boolean | undefined\n\n        let renderResult\n        // handle serverless\n        if (isLikeServerless) {\n          renderResult = await (components.Component as any).renderReqToHTML(\n            req,\n            res,\n            'passthrough',\n            {\n              fontManifest: this.renderOpts.fontManifest,\n              locale,\n              locales,\n              defaultLocale,\n            }\n          )\n\n          html = renderResult.html\n          pageData = renderResult.renderOpts.pageData\n          sprRevalidate = renderResult.renderOpts.revalidate\n          isNotFound = renderResult.renderOpts.isNotFound\n          isRedirect = renderResult.renderOpts.isRedirect\n        } else {\n          const origQuery = parseUrl(req.url || '', true).query\n          const hadTrailingSlash =\n            urlPathname !== '/' && this.nextConfig.trailingSlash\n\n          const resolvedUrl = formatUrl({\n            pathname: `${resolvedUrlPathname}${hadTrailingSlash ? '/' : ''}`,\n            // make sure to only add query values from original URL\n            query: origQuery,\n          })\n\n          const renderOpts: RenderOpts = {\n            ...components,\n            ...opts,\n            isDataReq,\n            resolvedUrl,\n            locale,\n            locales,\n            defaultLocale,\n            // For getServerSideProps we need to ensure we use the original URL\n            // and not the resolved URL to prevent a hydration mismatch on\n            // asPath\n            resolvedAsPath: isServerProps\n              ? formatUrl({\n                  // we use the original URL pathname less the _next/data prefix if\n                  // present\n                  pathname: `${urlPathname}${hadTrailingSlash ? '/' : ''}`,\n                  query: origQuery,\n                })\n              : resolvedUrl,\n          }\n\n          renderResult = await renderToHTML(\n            req,\n            res,\n            pathname,\n            query,\n            renderOpts\n          )\n\n          html = renderResult\n          // TODO: change this to a different passing mechanism\n          pageData = (renderOpts as any).pageData\n          sprRevalidate = (renderOpts as any).revalidate\n          isNotFound = (renderOpts as any).isNotFound\n          isRedirect = (renderOpts as any).isRedirect\n        }\n\n        return { html, pageData, sprRevalidate, isNotFound, isRedirect }\n      }\n    )\n\n    const isProduction = !this.renderOpts.dev\n    const isDynamicPathname = isDynamicRoute(pathname)\n    const didRespond = isResSent(res)\n\n    const { staticPaths, fallbackMode } = hasStaticPaths\n      ? await this.getStaticPaths(pathname)\n      : { staticPaths: undefined, fallbackMode: false }\n\n    // When we did not respond from cache, we need to choose to block on\n    // rendering or return a skeleton.\n    //\n    // * Data requests always block.\n    //\n    // * Blocking mode fallback always blocks.\n    //\n    // * Preview mode toggles all pages to be resolved in a blocking manner.\n    //\n    // * Non-dynamic pages should block (though this is an impossible\n    //   case in production).\n    //\n    // * Dynamic pages should return their skeleton if not defined in\n    //   getStaticPaths, then finish the data request on the client-side.\n    //\n    if (\n      this.minimalMode !== true &&\n      fallbackMode !== 'blocking' &&\n      ssgCacheKey &&\n      !didRespond &&\n      !isPreviewMode &&\n      isDynamicPathname &&\n      // Development should trigger fallback when the path is not in\n      // `getStaticPaths`\n      (isProduction ||\n        !staticPaths ||\n        // static paths always includes locale so make sure it's prefixed\n        // with it\n        !staticPaths.includes(\n          `${locale ? '/' + locale : ''}${resolvedUrlPathname}`\n        ))\n    ) {\n      if (\n        // In development, fall through to render to handle missing\n        // getStaticPaths.\n        (isProduction || staticPaths) &&\n        // When fallback isn't present, abort this render so we 404\n        fallbackMode !== 'static'\n      ) {\n        throw new NoFallbackError()\n      }\n\n      if (!isDataReq) {\n        let html: string\n\n        // Production already emitted the fallback as static HTML.\n        if (isProduction) {\n          html = await this.incrementalCache.getFallback(\n            locale ? `/${locale}${pathname}` : pathname\n          )\n        }\n        // We need to generate the fallback on-demand for development.\n        else {\n          query.__nextFallback = 'true'\n          if (isLikeServerless) {\n            prepareServerlessUrl(req, query)\n          }\n          const { value: renderResult } = await doRender()\n          html = renderResult.html\n        }\n\n        sendPayload(req, res, html, 'html', {\n          generateEtags: this.renderOpts.generateEtags,\n          poweredByHeader: this.renderOpts.poweredByHeader,\n        })\n        return null\n      }\n    }\n\n    const {\n      isOrigin,\n      value: { html, pageData, sprRevalidate, isNotFound, isRedirect },\n    } = await doRender()\n    let resHtml = html\n\n    const revalidateOptions =\n      !this.renderOpts.dev || (isServerProps && !isDataReq)\n        ? {\n            private: isPreviewMode,\n            stateful: !isSSG,\n            revalidate: sprRevalidate,\n          }\n        : undefined\n\n    if (\n      !isResSent(res) &&\n      !isNotFound &&\n      (isSSG || isDataReq || isServerProps)\n    ) {\n      if (isRedirect && !isDataReq) {\n        await handleRedirect(pageData)\n      } else {\n        sendPayload(\n          req,\n          res,\n          isDataReq ? JSON.stringify(pageData) : html,\n          isDataReq ? 'json' : 'html',\n          {\n            generateEtags: this.renderOpts.generateEtags,\n            poweredByHeader: this.renderOpts.poweredByHeader,\n          },\n          revalidateOptions\n        )\n      }\n      resHtml = null\n    }\n\n    // Update the cache if the head request and cacheable\n    if (isOrigin && ssgCacheKey) {\n      await this.incrementalCache.set(\n        ssgCacheKey,\n        { html: html!, pageData, isNotFound, isRedirect },\n        sprRevalidate\n      )\n    }\n\n    if (!isResSent(res) && isNotFound) {\n      if (revalidateOptions) {\n        setRevalidateHeaders(res, revalidateOptions)\n      }\n      await this.render404(\n        req,\n        res,\n        { pathname, query } as UrlWithParsedQuery,\n        !!revalidateOptions\n      )\n    }\n    return resHtml\n  }\n\n  public async renderToHTML(\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {}\n  ): Promise<string | null> {\n    try {\n      const result = await this.findPageComponents(pathname, query)\n      if (result) {\n        try {\n          return await this.renderToHTMLWithComponents(\n            req,\n            res,\n            pathname,\n            result,\n            { ...this.renderOpts }\n          )\n        } catch (err) {\n          if (!(err instanceof NoFallbackError)) {\n            throw err\n          }\n        }\n      }\n\n      if (this.dynamicRoutes) {\n        for (const dynamicRoute of this.dynamicRoutes) {\n          const params = dynamicRoute.match(pathname)\n          if (!params) {\n            continue\n          }\n\n          const dynamicRouteResult = await this.findPageComponents(\n            dynamicRoute.page,\n            query,\n            params\n          )\n          if (dynamicRouteResult) {\n            try {\n              return await this.renderToHTMLWithComponents(\n                req,\n                res,\n                dynamicRoute.page,\n                dynamicRouteResult,\n                { ...this.renderOpts, params }\n              )\n            } catch (err) {\n              if (!(err instanceof NoFallbackError)) {\n                throw err\n              }\n            }\n          }\n        }\n      }\n    } catch (err) {\n      this.logError(err)\n\n      if (err && err.code === 'DECODE_FAILED') {\n        res.statusCode = 400\n        return await this.renderErrorToHTML(err, req, res, pathname, query)\n      }\n      res.statusCode = 500\n      return await this.renderErrorToHTML(err, req, res, pathname, query)\n    }\n    res.statusCode = 404\n    return await this.renderErrorToHTML(null, req, res, pathname, query)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    pathname: string,\n    query: ParsedUrlQuery = {},\n    setHeaders = true\n  ): Promise<void> {\n    if (setHeaders) {\n      res.setHeader(\n        'Cache-Control',\n        'no-cache, no-store, max-age=0, must-revalidate'\n      )\n    }\n    const html = await this.renderErrorToHTML(err, req, res, pathname, query)\n    if (html === null) {\n      return\n    }\n    return this.sendHTML(req, res, html)\n  }\n\n  private customErrorNo404Warn = execOnce(() => {\n    console.warn(\n      chalk.bold.yellow(`Warning: `) +\n        chalk.yellow(\n          `You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://err.sh/next.js/custom-error-no-custom-404`\n        )\n    )\n  })\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: IncomingMessage,\n    res: ServerResponse,\n    _pathname: string,\n    query: ParsedUrlQuery = {}\n  ) {\n    let result: null | FindComponentsResult = null\n\n    const is404 = res.statusCode === 404\n    let using404Page = false\n\n    // use static 404 page if available and is 404 response\n    if (is404) {\n      result = await this.findPageComponents('/404', query)\n      using404Page = result !== null\n    }\n\n    if (!result) {\n      result = await this.findPageComponents('/_error', query)\n    }\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      !using404Page &&\n      (await this.hasPage('/_error')) &&\n      !(await this.hasPage('/404'))\n    ) {\n      this.customErrorNo404Warn()\n    }\n\n    let html: string | null\n    try {\n      try {\n        html = await this.renderToHTMLWithComponents(\n          req,\n          res,\n          using404Page ? '/404' : '/_error',\n          result!,\n          {\n            ...this.renderOpts,\n            err,\n          }\n        )\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error('invariant: failed to render error page')\n        }\n        throw maybeFallbackError\n      }\n    } catch (renderToHtmlError) {\n      console.error(renderToHtmlError)\n      res.statusCode = 500\n      html = 'Internal Server Error'\n    }\n    return html\n  }\n\n  public async render404(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl?: UrlWithParsedQuery,\n    setHeaders = true\n  ): Promise<void> {\n    const url: any = req.url\n    const { pathname, query } = parsedUrl ? parsedUrl : parseUrl(url, true)\n    const { i18n } = this.nextConfig\n\n    if (i18n) {\n      query.__nextLocale = query.__nextLocale || i18n.defaultLocale\n      query.__nextDefaultLocale =\n        query.__nextDefaultLocale || i18n.defaultLocale\n    }\n    res.statusCode = 404\n    return this.renderError(null, req, res, pathname!, query, setHeaders)\n  }\n\n  public async serveStatic(\n    req: IncomingMessage,\n    res: ServerResponse,\n    path: string,\n    parsedUrl?: UrlWithParsedQuery\n  ): Promise<void> {\n    if (!this.isServeableUrl(path)) {\n      return this.render404(req, res, parsedUrl)\n    }\n\n    if (!(req.method === 'GET' || req.method === 'HEAD')) {\n      res.statusCode = 405\n      res.setHeader('Allow', ['GET', 'HEAD'])\n      return this.renderError(null, req, res, path)\n    }\n\n    try {\n      await serveStatic(req, res, path)\n    } catch (err) {\n      if (err.code === 'ENOENT' || err.statusCode === 404) {\n        this.render404(req, res, parsedUrl)\n      } else if (err.statusCode === 412) {\n        res.statusCode = 412\n        return this.renderError(err, req, res, path)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  private _validFilesystemPathSet: Set<string> | null = null\n  private getFilesystemPaths(): Set<string> {\n    if (this._validFilesystemPathSet) {\n      return this._validFilesystemPathSet\n    }\n\n    const pathUserFilesStatic = join(this.dir, 'static')\n    let userFilesStatic: string[] = []\n    if (this.hasStaticDir && fs.existsSync(pathUserFilesStatic)) {\n      userFilesStatic = recursiveReadDirSync(pathUserFilesStatic).map((f) =>\n        join('.', 'static', f)\n      )\n    }\n\n    let userFilesPublic: string[] = []\n    if (this.publicDir && fs.existsSync(this.publicDir)) {\n      userFilesPublic = recursiveReadDirSync(this.publicDir).map((f) =>\n        join('.', 'public', f)\n      )\n    }\n\n    let nextFilesStatic: string[] = []\n    nextFilesStatic = recursiveReadDirSync(\n      join(this.distDir, 'static')\n    ).map((f) => join('.', relative(this.dir, this.distDir), 'static', f))\n\n    return (this._validFilesystemPathSet = new Set<string>([\n      ...nextFilesStatic,\n      ...userFilesPublic,\n      ...userFilesStatic,\n    ]))\n  }\n\n  protected isServeableUrl(untrustedFileUrl: string): boolean {\n    // This method mimics what the version of `send` we use does:\n    // 1. decodeURIComponent:\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L989\n    //    https://github.com/pillarjs/send/blob/0.17.1/index.js#L518-L522\n    // 2. resolve:\n    //    https://github.com/pillarjs/send/blob/de073ed3237ade9ff71c61673a34474b30e5d45b/index.js#L561\n\n    let decodedUntrustedFilePath: string\n    try {\n      // (1) Decode the URL so we have the proper file name\n      decodedUntrustedFilePath = decodeURIComponent(untrustedFileUrl)\n    } catch {\n      return false\n    }\n\n    // (2) Resolve \"up paths\" to determine real request\n    const untrustedFilePath = resolve(decodedUntrustedFilePath)\n\n    // don't allow null bytes anywhere in the file path\n    if (untrustedFilePath.indexOf('\\0') !== -1) {\n      return false\n    }\n\n    // Check if .next/static, static and public are in the path.\n    // If not the path is not available.\n    if (\n      (untrustedFilePath.startsWith(join(this.distDir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'static') + sep) ||\n        untrustedFilePath.startsWith(join(this.dir, 'public') + sep)) === false\n    ) {\n      return false\n    }\n\n    // Check against the real filesystem paths\n    const filesystemUrls = this.getFilesystemPaths()\n    const resolved = relative(this.dir, untrustedFilePath)\n    return filesystemUrls.has(resolved)\n  }\n\n  protected readBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err) {\n      if (!fs.existsSync(buildIdFile)) {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://err.sh/vercel/next.js/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected get _isLikeServerless(): boolean {\n    return isTargetLikeServerless(this.nextConfig.target)\n  }\n}\n\nfunction prepareServerlessUrl(\n  req: IncomingMessage,\n  query: ParsedUrlQuery\n): void {\n  const curUrl = parseUrl(req.url!, true)\n  req.url = formatUrl({\n    ...curUrl,\n    search: undefined,\n    query: {\n      ...curUrl.query,\n      ...query,\n    },\n  })\n}\n\nclass NoFallbackError extends Error {}\n"]}